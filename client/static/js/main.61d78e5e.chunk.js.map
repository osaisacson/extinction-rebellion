{"version":3,"sources":["components/FooterNav.js","components/Story.js","components/Stories.js","components/Voting.js","components/DemandItem.js","components/Demands.js","components/AddAction.js","components/AddStory.js","components/AddDemand.js","components/EditDemand.js","components/AddEdit.js","components/DemandComponents/Description.js","components/DemandDetails.js","components/Search.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["FooterNav","props","state","homeActive","demandsActive","handleHomeClick","bind","handleDemandsClick","className","this","onClick","to","icon","faSkullCrossbones","faFistRaised","setState","Component","Story","handle","handleStateChange","e","twitterHandle","src","img","alt","city","country","Stories","isLoading","stories","updateTwitter","getStories","axios","get","then","response","sortedStories","data","sort","a","b","localeCompare","catch","err","console","log","twitterFeed","dataSource","sourceType","screenName","options","username","height","faPlus","map","story","key","id","Voting","upvote","newVote","voteLimit","votes","isSent","isBeingDefined","editDemand","downvote","request","method","url","cardId","window","location","reload","history","push","showAsRebel","faMale","faPenFancy","faCaretUp","faCaretDown","React","DemandItem","card","demand","showEdit","edits","actions","getData","demandId","all","spread","editsArray","actionsArray","criteria","demandEdits","filter","item","demandActions","isSuggested","cardBackgroundType","as","Card","Header","length","faBook","faWrench","status","isRebel","title","summary","Demands","header","subheader","backgroundColor","demands","Body","Accordion","AddAction","newAction","alert","date","refs","value","time","name","telegram","addAction","preventDefault","href","onSubmit","type","ref","placeholder","htmlFor","AddStory","params","query","page","per_page","headers","Authorization","newStory","results","urls","small","twitter","AddDemand","newDemand","background","indicators","representative","representativeEmail","addDemand","rows","EditDemand","handleInputChange","getDemandDetails","target","onChange","AddEdit","newEdit","editSummary","by","repesentative","addEdit","Description","DemandDetails","showDescription","currentDemandId","match","toggleEdit","delete","onDelete","Tabs","defaultActiveKey","Tab","eventKey","faEdit","edit","editVotes","action","joined","Search","search","updateSearch","Routes","axiosConfig","event","substr","filteredCards","indexOf","xrFactions","suggestedCards","faAmericanSignLanguageInterpreting","exact","path","render","component","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"uQAQqBA,E,YACnB,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,WAAY,mBACZC,cAAe,IAGjB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBATT,E,sEAajB,OACE,oCACE,yBAAKE,UAAU,cACb,yBACEA,UAAS,mBAAcC,KAAKP,MAAMC,YAClCO,QAASD,KAAKJ,iBAEd,kBAAC,IAAD,CAAMM,GAAG,KACP,kBAAC,IAAD,CAAiBC,KAAMC,OAEzB,wCAEF,yBACEL,UAAS,mBAAcC,KAAKP,MAAME,eAClCM,QAASD,KAAKF,oBAEd,kBAAC,IAAD,CAAMI,GAAG,cACP,kBAAC,IAAD,CAAiBC,KAAME,OAEzB,4C,wCAQRL,KAAKM,SAAS,CACZZ,WAAY,mBACZC,cAAe,O,2CAKjBK,KAAKM,SAAS,CACZZ,WAAY,GACZC,cAAe,yB,GAlDkBY,a,wBCLlBC,E,sLACLC,GACZT,KAAKR,MAAMkB,kBAAkBD,K,+BAGrB,IAAD,OACP,OACE,4BACEV,UAAU,QACVE,QAAS,SAAAU,GAAC,OAAI,EAAKnB,MAAMS,QAAQ,EAAKT,MAAMoB,iBAE5C,yBAAKb,UAAU,QACb,yBAAKc,IAAKb,KAAKR,MAAMsB,IAAKC,IAAI,SAEhC,4BAAKf,KAAKR,MAAMwB,MAChB,4BAAKhB,KAAKR,MAAMyB,c,GAfWV,a,QCKdW,E,YACnB,aAAe,IAAD,8BACZ,+CACKzB,MAAQ,CACXmB,cAAe,GACfO,WAAW,EACXC,QAAS,IAEX,EAAKC,cAAgB,EAAKA,cAAcxB,KAAnB,gBAPT,E,iFAWZG,KAAKsB,e,mCAGO,IAAD,OACXC,IACGC,IAAI,0DACJC,MAAK,SAAAC,GACJ,IAAIC,EAAgBD,EAASE,KAAKC,MAAK,SAACC,EAAGC,GAAJ,OACrCA,EAAEf,KAAKgB,cAAcF,EAAEd,SAGzB,EAAKV,SAAS,CACZc,QAASO,EACTR,WAAW,OAGdc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,mCAAoCF,Q,oCAIpDzB,GACZT,KAAKM,SAAS,CAAEM,cAAeH,M,+BAGvB,IAEJ4B,EAFG,OACD5B,EAAST,KAAKP,MAAMmB,cA+B1B,OA3BEyB,EADE5B,EAEA,kBAAC,WAAD,CACE6B,WAAY,CACVC,WAAY,UACZC,WAAY/B,GAEdgC,QAAS,CACPC,SAAUjC,EACVkC,OAAQ,UAMZ,kBAAC,WAAD,CACEL,WAAY,CACVC,WAAY,UACZC,WAAY,eAEdC,QAAS,CACPC,SAAU,cACVC,OAAQ,UAOd,oCACE,yBAAK5C,UAAU,0CACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMG,GAAG,cACP,yBAAKH,UAAU,cACb,kBAAC,IAAD,CAAiBI,KAAMyC,QAG1B5C,KAAKP,MAAM2B,QAAQyB,KAAI,SAAAC,GACtB,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAME,GACXpC,cAAekC,EAAMlC,cACrBX,QAAS,EAAKoB,cACdP,IAAKgC,EAAMhC,IACXE,KAAM8B,EAAM9B,KACZC,QAAS6B,EAAM7B,eAMzB,yBAAKlB,UAAU,iBACb,yBAAKA,UAAU,4BAA4BsC,S,GA5FhB9B,a,iBCuFtB0C,EApFf,YACE,WAAYzD,GAAQ,IAAD,8BACjB,4CAAMA,KAqBR0D,OAAS,WACP,IAAIC,EAEFA,EADE,EAAK3D,MAAM4D,YAAc,EAAK3D,MAAM4D,MAAQ,EACpC,CACRC,QAAQ,EACRC,gBAAgB,EAChBF,MAAO,EAAK5D,MAAM4D,MAAQ,GAGlB,CACRA,MAAO,EAAK5D,MAAM4D,MAAQ,GAG9B,EAAKG,WAAWL,IAnCC,EAsCnBM,SAAW,WACT,IAAMN,EAAU,CACdE,MAAO,EAAK5D,MAAM4D,MAAQ,GAE5B,EAAKG,WAAWL,IAvChB,EAAK1D,MAAQ,CACX4D,MAAO,EAAK7D,MAAM6D,OAJH,EADrB,wEASaF,GAAU,IAAD,OAClB5B,IACGmC,QAAQ,CACPC,OAAQ,QACRC,IAAI,0DAAD,OAA4D5D,KAAKR,MAAMqE,QAC1EjC,KAAMuB,IAEP1B,MAAK,SAAAC,GACJoC,OAAOC,SAASC,SAChB,EAAKxE,MAAMyE,QAAQC,KAAK,QAEzBjC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,kCAAmCF,QApBnE,+BA+CI,OACE,yBAAKnC,UAAU,kBACZC,KAAKR,MAAM2E,YACV,yBAAKpE,UAAU,gBACb,4BAAQA,UAAU,WAAWE,QAASD,KAAKkD,QACzC,4BAAKlD,KAAKP,MAAM4D,OAChB,kBAAC,IAAD,CAAiBtD,UAAU,WAAWI,KAAMiE,QAG9CpE,KAAKR,MAAM8D,OACb,yBAAKvD,UAAU,gBACb,4BAAKC,KAAKP,MAAM4D,OAChB,kBAAC,IAAD,CACEtD,UAAU,WACVI,KAAMkE,IACNpE,QAASD,KAAKkD,UAIlB,yBAAKnD,UAAU,gBACb,kBAAC,IAAD,CACEA,UAAU,WACVI,KAAMmE,IACNrE,QAASD,KAAKkD,SAEhB,4BAAKlD,KAAKP,MAAM4D,OAChB,kBAAC,IAAD,CACEtD,UAAU,WACVI,KAAMoE,IACNtE,QAASD,KAAKyD,iBA5E5B,GAA4Be,IAAMjE,WCIbkE,E,YACnB,WAAYjF,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXiF,KAAMlF,EAAMkF,KACZC,OAAQ,GACRxD,WAAW,EACXyD,UAAU,EACVC,MAAO,GACPC,QAAS,GACTxB,OAAQ9D,EAAM8D,QAVC,E,iFAejBtD,KAAK+E,Y,gCAGI,IAAD,OACJC,EAAWhF,KAAKP,MAAMiF,KAAK1B,GAC/BzB,IACG0D,IAAI,CACH1D,IAAMC,IAAN,iEAC4DwD,IAE5DzD,IAAMC,IAAI,wDACVD,IAAMC,IAAI,4DAEXC,KACCF,IAAM2D,QAAO,SAACP,EAAQE,EAAOC,GAC3B,IAAMK,EAAaN,EAAMjD,KACnBwD,EAAeN,EAAQlD,KACvByD,EAAWL,EAEXM,EAAcH,EAAWI,QAC7B,SAAAC,GAAI,OAAIA,EAAKR,WAAaK,KAEtBI,EAAgBL,EAAaG,QACjC,SAAAC,GAAI,OAAIA,EAAKR,WAAaK,KAG5B,EAAK/E,SAAS,CACZqE,OAAQA,EAAO/C,KACfiD,MAAOS,EACPR,QAASW,EACTtE,WAAW,QAIhBc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,mCAAoCF,Q,+BAGxD,IAAD,EAC0BlC,KAAKP,MAA9BiF,EADD,EACCA,KAAMG,EADP,EACOA,MAAOC,EADd,EACcA,QAEjBY,EAAchB,EAAKnB,eACnBoC,EAAqBD,EAAc,YAAc,OAErD,OACE,yBAAK3F,UAAS,uBAAkB4F,GAAsB5C,IAAK2B,EAAK1B,IAC9D,yBAAKjD,UAAU,eACb,yBAAKA,UAAU,mBACb,yBAAK6F,GAAIC,IAAKC,OAAQ/F,UAAU,gBAC7B2E,EAAKpB,OACJ,oCACE,4BAAKuB,EAAQA,EAAMkB,OAAS,GAC5B,kBAAC,IAAD,CAAiB5F,KAAM6F,OAGzB,oCACE,4BAAKnB,EAAQA,EAAMkB,OAAS,GAC5B,kBAAC,IAAD,CAAiB5F,KAAM8F,QAK7B,yBAAKL,GAAIC,IAAKC,OAAQ/F,UAAU,gBAC9B,4BAAK+E,EAAUA,EAAQiB,OAAS,GAChC,kBAAC,IAAD,CAAiB5F,KAAME,QAK3B,kBAAC,EAAD,CACEgD,MAAOqB,EAAKrB,MACZC,OAAQoB,EAAKpB,OACbO,OAAQa,EAAK1B,GACbI,UAAW,MAGf,kBAACyC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAM3F,GAAE,mBAAcwE,EAAK1B,KACzB,yBAAKjD,UAAU,kBAEX2F,GAAehB,EAAKwB,OACpB,uBAAGnG,UAAS,eAAU2E,EAAKyB,QAAU,MAAQ,aAC1CzB,EAAKwB,QAEN,KAEJ,4BACGxB,EAAK1D,KADR,KACe,0BAAMjB,UAAU,QAAQ2E,EAAKzD,UAI5C,4BAAKyD,EAAK0B,OACV,4BAAK1B,EAAK2B,UAGZ,yBAAKtG,UAAU,qB,GA9GaQ,aCLnB+F,E,iLACT,IAAD,EAQHtG,KAAKR,MANP+G,EAFK,EAELA,OACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,gBACAC,EALK,EAKLA,QACApD,EANK,EAMLA,OACAoC,EAPK,EAOLA,YAGF,OACE,yBAAK3F,UAAU,kBACb,kBAAC8F,EAAA,EAAD,KACE,yBAAK9F,UAAS,gCAA2B0G,IACvC,kBAAC,IAAD,CAAMvG,GAAG,eACP,yBAAKH,UAAU,cACb,kBAAC,IAAD,CAAiBI,KAAMyC,QAG3B,4BACG2D,EADH,KACaG,EAAQX,QAAU,EAD/B,KAGA,yBAAKhG,UAAU,0BACb,2BAAIyG,KAIR,kBAACX,EAAA,EAAKc,KAAN,KACE,kBAACC,EAAA,EAAD,KACIF,EAAQX,OAIN,KAHF,yBAAKhG,UAAU,gBACb,uBAAGA,UAAU,eAAb,wBAGH2G,EAAQ7D,KAAI,SAAA6B,GACX,OACE,kBAAC,EAAD,CACE3B,IAAK2B,EAAK1B,GACV0B,KAAMA,EACNpB,OAAQA,EACRoC,YAAaA,e,GAzCInF,aCPhBsG,E,kLACTC,GACRvF,IACGmC,QAAQ,CACPC,OAAQ,OACRC,IAAK,yDACLhC,KAAMkF,IAEPrF,MAAK,SAAAC,GACJqF,MAAM,UACNjD,OAAOC,SAASC,YAEjB/B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,oCAAqCF,Q,+BAG1DvB,GACP,IAAMmG,EAAY,CAChB9B,SAAUhF,KAAKR,MAAMwF,SACrBgC,KAAMhH,KAAKiH,KAAKD,KAAKE,MACrBC,KAAMnH,KAAKiH,KAAKE,KAAKD,MACrBE,KAAMpH,KAAKiH,KAAKG,KAAKF,MACrBG,SAAUrH,KAAKiH,KAAKI,SAASH,OAE/B/E,QAAQC,IAAI,YAAa0E,GAEzB9G,KAAKsH,UAAUR,GACfnG,EAAE4G,mB,+BAIF,OACE,oCACE,oHAEwB,IACtB,uBAAGC,KAAK,4EAAR,gCAEK,IALP,oCAQA,0BAAMC,SAAUzH,KAAKyH,SAAS5H,KAAKG,OACjC,yBAAKD,UAAU,cACb,2BACEA,UAAU,eACV2H,KAAK,OACLN,KAAK,OACLO,IAAI,OACJC,YAAY,mBAEd,2BAAOC,QAAQ,SAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,OACLO,IAAI,OACJC,YAAY,SAEd,2BAAOC,QAAQ,SAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,OACLO,IAAI,OACJC,YAAY,mBAEd,2BAAOC,QAAQ,SAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,WACLO,IAAI,WACJC,YAAY,wBAEd,2BAAOC,QAAQ,cAEjB,2BACE9H,UAAU,wCACV2H,KAAK,SACLR,MAAM,yB,GAjFqB3G,aCElBuH,E,iLACVnH,GAAI,IAAD,OACVY,IACGC,IAAI,yCAA0C,CAC7CuG,OAAQ,CAAEC,MAAOhI,KAAKiH,KAAKjG,KAAKkG,OAChCe,KAAM,EACNC,SAAU,EACVC,QAAS,CACPC,cACE,gFAGL3G,MAAK,SAAAC,GACJ,IAKM2G,EAAW,CACfvH,IALAY,EAASE,KAAK0G,QAAQvC,OAAS,EAC3BrE,EAASE,KAAK0G,QAAQ,GAAGC,KAAKC,MAC9B,wIAIJxH,KAAM,EAAKiG,KAAKjG,KAAKkG,MACrBjG,QAAS,EAAKgG,KAAKhG,QAAQiG,MAC3BtG,cAAe,EAAKqG,KAAKwB,QAAQvB,OAGnC3F,IACGmC,QAAQ,CACPC,OAAQ,OACRC,IAAK,yDACLhC,KAAMyG,IAEP5G,MAAK,SAAAC,GACJ,EAAKlC,MAAMyE,QAAQC,KAAK,QAEzBjC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,oCAAqCF,SAGrEvB,EAAE4G,mB,+BAIF,OACE,oCACE,kBAAC,IAAD,CAAMxH,UAAU,WAAWG,GAAG,KAA9B,QAGA,kBAAC2F,EAAA,EAAD,CAAM9F,UAAU,aACd,qDAEA,0BAAM0H,SAAUzH,KAAKyH,SAAS5H,KAAKG,OACjC,yBAAKD,UAAU,eACb,yBAAKA,UAAU,cACb,2BACEA,UAAU,aACV2H,KAAK,OACLN,KAAK,OACLO,IAAI,OACJC,YAAY,SAEd,2BAAOC,QAAQ,UAEjB,yBAAK9H,UAAU,cACb,2BACE2H,KAAK,OACLN,KAAK,UACLO,IAAI,UACJC,YAAY,YAEd,2BAAOC,QAAQ,cAGnB,yBAAK9H,UAAU,cACb,2BACE2H,KAAK,OACLN,KAAK,UACLO,IAAI,UACJC,YAAY,mBAEd,2BAAOC,QAAQ,aAEjB,2BACE9H,UAAU,oDACV2H,KAAK,SACLR,MAAM,wBAGV,mC,GAtF4B3G,aCDjBmI,E,kLACTC,GAAY,IAAD,OACnBpH,IACGmC,QAAQ,CACPC,OAAQ,OACRC,IAAK,yDACLhC,KAAM+G,IAEPlH,MAAK,SAAAC,GACJoC,OAAOC,SAASC,SAChB,EAAKxE,MAAMyE,QAAQC,KAAK,KACxB/B,QAAQC,IAAIV,MAEbO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,oCAAqCF,Q,+BAG1DvB,GACP,IAAMgI,EAAY,CAChBpF,gBAAgB,EAChB6C,MAAOpG,KAAKiH,KAAKb,MAAMc,OAAS,eAChClG,KAAMhB,KAAKiH,KAAKjG,KAAKkG,OAAS,cAC9BjG,QAASjB,KAAKiH,KAAKhG,QAAQiG,OAAS,iBACpCb,QAASrG,KAAKiH,KAAKZ,QAAQa,OAAS,iBACpC0B,WAAY5I,KAAKiH,KAAK2B,WAAW1B,OAAS,oBAC1C2B,WAAY7I,KAAKiH,KAAK4B,WAAW3B,OAAS,oBAC1C4B,eAAgB9I,KAAKiH,KAAK6B,eAAe5B,OAAS,wBAClD6B,oBACE/I,KAAKiH,KAAK8B,oBAAoB7B,OAC9B,uCAEJlH,KAAKgJ,UAAUL,GACfhI,EAAE4G,mB,+BAIF,OACE,oCACE,kBAAC,IAAD,CAAMxH,UAAU,WAAWG,GAAG,KAA9B,QAGA,yBAAKH,UAAU,cACb,mGAGA,6BAEA,0BAAM0H,SAAUzH,KAAKyH,SAAS5H,KAAKG,OACjC,yBAAKD,UAAU,cACb,2BACEA,UAAU,eACV2H,KAAK,OACLN,KAAK,QACLO,IAAI,QACJC,YAAY,UAEd,2BAAOC,QAAQ,UACf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,OACLO,IAAI,OACJC,YAAY,SAEd,2BAAOC,QAAQ,SACf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,UACLO,IAAI,UACJC,YAAY,YAEd,2BAAOC,QAAQ,YAEf,8BACE9H,UAAU,eACVkJ,KAAK,IACLvB,KAAK,OACLN,KAAK,UACLO,IAAI,UACJC,YAAY,YAEd,2BAAOC,QAAQ,YAEf,8BACE9H,UAAU,eACVkJ,KAAK,IACLvB,KAAK,OACLN,KAAK,aACLO,IAAI,aACJC,YAAY,eAEd,2BAAOC,QAAQ,eAEf,8BACE9H,UAAU,eACVkJ,KAAK,IACLvB,KAAK,OACLN,KAAK,aACLO,IAAI,aACJC,YAAY,eAEd,2BAAOC,QAAQ,eACf,4BACE,0BAAM9H,UAAU,QAAhB,kBADF,wHAIE,6BAJF,8CAMA,6BAEA,2BACEA,UAAU,eACV2H,KAAK,OACLN,KAAK,iBACLO,IAAI,iBACJC,YAAY,2BAEd,2BAAOC,QAAQ,mBAEf,2BACE9H,UAAU,eACV2H,KAAK,QACLN,KAAK,sBACLO,IAAI,sBACJC,YAAY,4BAEd,2BAAOC,QAAQ,yBA4DjB,2BACE9H,UAAU,oDACV2H,KAAK,SACLR,MAAM,oBAGV,6BACA,mC,GAjM6B3G,a,SCDlB2I,E,YACnB,WAAY1J,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACX8D,gBAAgB,EAChB6C,MAAO,GACPpF,KAAM,GACNC,QAAS,GACToF,QAAS,GACTuC,WAAY,GACZC,WAAY,GACZC,eAAgB,GAChBC,oBAAqB,IAGvB,EAAKI,kBAAoB,EAAKA,kBAAkBtJ,KAAvB,gBAfR,E,iFAmBjBG,KAAKoJ,qB,yCAGa,IAAD,OACbpE,EAAWhF,KAAKR,MAAMwF,SAC1BzD,IACGC,IADH,iEACiEwD,IAC9DvD,MAAK,SAAAC,GACJ,EAAKpB,SAAS,CACZ0C,GAAItB,EAASE,KAAKoB,GAClBoD,MAAO1E,EAASE,KAAKwE,MACrBpF,KAAMU,EAASE,KAAKZ,KACpBC,QAASS,EAASE,KAAKX,QACvBoF,QAAS3E,EAASE,KAAKyE,QACvBuC,WAAYlH,EAASE,KAAKgH,WAC1BC,WAAYnH,EAASE,KAAKiH,WAC1BC,eAAgBpH,EAASE,KAAKkH,eAC9BC,oBAAqBrH,EAASE,KAAKmH,yBAGtC9G,OAAM,SAAAC,GAAG,OACRC,QAAQC,IAAI,4CAA6CF,Q,iCAIpDyG,GAAY,IAAD,OACpBpH,IACGmC,QAAQ,CACPC,OAAQ,MACRC,IAAI,0DAAD,OAA4D5D,KAAKP,MAAMuD,IAC1EpB,KAAM+G,IAEPlH,MAAK,SAAAC,GACJqF,MAAM,SACNjD,OAAOC,SAASC,SAChB,EAAKxE,MAAMyE,QAAQC,KAAK,KACxB/B,QAAQC,IAAIV,MAEbO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,sCAAuCF,Q,+BAG5DvB,GACP,IAAMgI,EAAY,CAChBpF,gBAAgB,EAChB6C,MAAOpG,KAAKiH,KAAKb,MAAMc,MACvBlG,KAAMhB,KAAKiH,KAAKjG,KAAKkG,MACrBjG,QAASjB,KAAKiH,KAAKhG,QAAQiG,MAC3Bb,QAASrG,KAAKiH,KAAKZ,QAAQa,MAC3B0B,WAAY5I,KAAKiH,KAAK2B,WAAW1B,MACjC2B,WAAY7I,KAAKiH,KAAK4B,WAAW3B,MACjC4B,eAAgB9I,KAAKiH,KAAK6B,eAAe5B,MACzC6B,oBAAqB/I,KAAKiH,KAAK8B,oBAAoB7B,OAErDlH,KAAKwD,WAAWmF,GAChBhI,EAAE4G,mB,wCAGc5G,GAChB,IAAM0I,EAAS1I,EAAE0I,OACXnC,EAAQmC,EAAOnC,MACfE,EAAOiC,EAAOjC,KAEpBpH,KAAKM,SAAL,eACG8G,EAAOF,M,+BAKV,OACE,oCAIE,yBAAKnH,UAAU,cACb,0BAAM0H,SAAUzH,KAAKyH,SAAS5H,KAAKG,OACjC,yBAAKD,UAAU,cACb,2BACEA,UAAU,eACV2H,KAAK,OACLN,KAAK,QACLO,IAAI,QACJC,YAAY,QACZV,MAAOlH,KAAKP,MAAM2G,MAClBkD,SAAUtJ,KAAKmJ,oBAEjB,2BAAOtB,QAAQ,WAEjB,yBAAK9H,UAAU,eACb,yBAAKA,UAAU,cACb,2BACEA,UAAU,eACV2H,KAAK,OACLN,KAAK,OACLO,IAAI,OACJC,YAAY,OACZV,MAAOlH,KAAKP,MAAMuB,KAClBsI,SAAUtJ,KAAKmJ,oBAEjB,2BAAOtB,QAAQ,UAEjB,yBAAK9H,UAAU,cACb,2BACEA,UAAU,eACV2H,KAAK,OACLN,KAAK,UACLO,IAAI,UACJC,YAAY,UACZV,MAAOlH,KAAKP,MAAMwB,QAClBqI,SAAUtJ,KAAKmJ,oBAEjB,2BAAOtB,QAAQ,cAInB,yBAAK9H,UAAU,cACb,8BACEA,UAAU,eACVkJ,KAAK,IACLvB,KAAK,OACLN,KAAK,UACLO,IAAI,UACJC,YAAY,UACZV,MAAOlH,KAAKP,MAAM4G,QAClBiD,SAAUtJ,KAAKmJ,oBAEjB,2BAAOtB,QAAQ,aAEjB,yBAAK9H,UAAU,cACb,8BACEA,UAAU,eACVkJ,KAAK,IACLvB,KAAK,OACLN,KAAK,aACLO,IAAI,aACJC,YAAY,aACZV,MAAOlH,KAAKP,MAAMmJ,WAClBU,SAAUtJ,KAAKmJ,oBAEjB,2BAAOtB,QAAQ,gBAEjB,yBAAK9H,UAAU,cACb,8BACEA,UAAU,eACVkJ,KAAK,IACLvB,KAAK,OACLN,KAAK,aACLO,IAAI,aACJC,YAAY,aACZV,MAAOlH,KAAKP,MAAMoJ,WAClBS,SAAUtJ,KAAKmJ,oBAEjB,2BAAOtB,QAAQ,gBAEjB,6BAEA,yBAAK9H,UAAU,eACb,yBAAKA,UAAU,cACb,2BACEA,UAAU,eACV2H,KAAK,OACLN,KAAK,iBACLO,IAAI,iBACJC,YAAY,WACZV,MAAOlH,KAAKP,MAAMqJ,eAClBQ,SAAUtJ,KAAKmJ,oBAEjB,2BAAOtB,QAAQ,oBAEjB,yBAAK9H,UAAU,cACb,2BACEA,UAAU,eACV2H,KAAK,QACLN,KAAK,sBACLO,IAAI,sBACJC,YAAY,QACZV,MAAOlH,KAAKP,MAAMsJ,oBAClBO,SAAUtJ,KAAKmJ,oBAEjB,2BAAOtB,QAAQ,0BAInB,2BACE9H,UAAU,oDACV2H,KAAK,SACLR,MAAM,UAGV,6BACA,mC,GAjN8B3G,a,kBCAnBgJ,E,gLACXC,GACNjI,IACGmC,QAAQ,CACPC,OAAQ,OACRC,IAAK,uDACLhC,KAAM4H,IAEP/H,MAAK,SAAAC,GACJqF,MAAM,UACNjD,OAAOC,SAASC,YAEjB/B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,gCAAiCF,Q,+BAGtDvB,GACP,IAAMgE,EAAS3E,KAAKR,MAAMmF,OACpB6E,EAAU,CACdxE,SAAUL,EAAO3B,GACjByG,YAAazJ,KAAKiH,KAAKwC,YAAYvC,MACnCwC,GAAI1J,KAAKiH,KAAKyC,GAAGxC,MACjBjG,QAASjB,KAAKiH,KAAKhG,QAAQiG,MACvBlH,KAAKiH,KAAKhG,QAAQiG,MAClBvC,EAAO1D,QACXD,KAAMhB,KAAKiH,KAAKjG,KAAKkG,MAAQlH,KAAKiH,KAAKjG,KAAKkG,MAAQvC,EAAO3D,KAC3DoF,MAAOpG,KAAKiH,KAAKb,MAAMc,MAAQlH,KAAKiH,KAAKb,MAAMc,MAAQvC,EAAOyB,MAC9DC,QAASrG,KAAKiH,KAAKZ,QAAQa,MACvBlH,KAAKiH,KAAKZ,QAAQa,MAClBvC,EAAO0B,QACXuC,WAAY5I,KAAKiH,KAAK2B,WAAW1B,MAC7BlH,KAAKiH,KAAK2B,WAAW1B,MACrBvC,EAAOiE,WACXC,WAAY7I,KAAKiH,KAAK4B,WAAW3B,MAC7BlH,KAAKiH,KAAK4B,WAAW3B,MACrBvC,EAAOkE,WACXC,eAAgB9I,KAAKiH,KAAK6B,eAAe5B,MACrClH,KAAKiH,KAAK6B,eAAe5B,MACzBvC,EAAOgF,cACXZ,oBAAqB/I,KAAKiH,KAAK8B,oBAAoB7B,MAC/ClH,KAAKiH,KAAK8B,oBAAoB7B,MAC9BvC,EAAOoE,qBAEb5G,QAAQC,IAAI,UAAWoH,GAEvBxJ,KAAK4J,QAAQJ,GACb7I,EAAE4G,mB,+BAIF,OACE,oCACE,0GAIA,0BAAME,SAAUzH,KAAKyH,SAAS5H,KAAKG,OACjC,yBAAKD,UAAU,cACb,2BACEA,UAAU,eACV2H,KAAK,OACLN,KAAK,cACLO,IAAI,cACJC,YAAY,kBAEd,2BAAOC,QAAQ,gBAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,KACLO,IAAI,KACJC,YAAY,aAEd,2BAAOC,QAAQ,OAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,UACLO,IAAI,UACJC,YAAY,YAEd,2BAAOC,QAAQ,YAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,OACLO,IAAI,OACJC,YAAY,SAEd,2BAAOC,QAAQ,SAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,QACLO,IAAI,QACJC,YAAY,UAEd,2BAAOC,QAAQ,UAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,UACLO,IAAI,UACJC,YAAY,YAEd,2BAAOC,QAAQ,YAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,aACLO,IAAI,aACJC,YAAY,eAEd,2BAAOC,QAAQ,eAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,aACLO,IAAI,aACJC,YAAY,eAEd,2BAAOC,QAAQ,eAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,iBACLO,IAAI,iBACJC,YAAY,mBAEd,2BAAOC,QAAQ,mBAEf,2BACE9H,UAAU,eACV2H,KAAK,OACLN,KAAK,sBACLO,IAAI,sBACJC,YAAY,yBAEd,2BAAOC,QAAQ,yBAEjB,2BACE9H,UAAU,wCACV2H,KAAK,SACLR,MAAM,uB,GAtJmB3G,aCDhBsJ,E,iLACT,IACAlF,EAAW3E,KAAKR,MAAhBmF,OAER,OACE,oCACE,yBAAK5E,UAAU,iCACb,yDACA,uBAAGA,UAAU,QACV4E,EAAOmE,eACJnE,EAAOmE,eACP,0BAIR,wBAAI/I,UAAU,QAAd,WACA,2BAAI4E,EAAO0B,QAAU1B,EAAO0B,QAAU,kBACtC,wBAAItG,UAAU,QAAd,cACA,2BAAI4E,EAAOiE,WAAajE,EAAOiE,WAAa,qBAC5C,wBAAI7I,UAAU,QAAd,cACA,2BAAI4E,EAAOkE,WAAalE,EAAOkE,WAAa,0B,GApBXtI,aCuBpBuJ,E,YACnB,WAAYtK,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXkF,OAAQ,GACRxD,WAAW,EACX4I,iBAAiB,EACjBnF,UAAU,EACVC,MAAO,GACPC,QAAS,GACTkF,gBAAiBxK,EAAMyK,MAAMlC,OAAO/E,IAGtC,EAAKkH,WAAa,EAAKA,WAAWrK,KAAhB,gBAbD,E,iFAiBjBG,KAAK+E,Y,gCAGI,IAAD,OACJC,EAAWhF,KAAKR,MAAMyK,MAAMlC,OAAO/E,GACvCzB,IACG0D,IAAI,CACH1D,IAAMC,IAAN,iEAC4DwD,IAE5DzD,IAAMC,IAAI,wDACVD,IAAMC,IAAI,4DAEXC,KACCF,IAAM2D,QAAO,SAACP,EAAQE,EAAOC,GAC3B,IAAMK,EAAaN,EAAMjD,KACnBwD,EAAeN,EAAQlD,KACvByD,EAAW,EAAK5F,MAAMuK,gBAEtB1E,EAAcH,EAAWI,QAC7B,SAAAC,GAAI,OAAIA,EAAKR,WAAaK,KAGtBI,EAAgBL,EAAaG,QACjC,SAAAC,GAAI,OAAIA,EAAKR,WAAaK,KAG5B,EAAK/E,SAAS,CACZqE,OAAQA,EAAO/C,KACfiD,MAAOS,EACPR,QAASW,EACTtE,WAAW,QAIhBc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,sCAAuCF,Q,iCAGzD,IAAD,OACL8C,EAAWhF,KAAKP,MAAMkF,OAAO3B,GACjCzB,IACG4I,OADH,iEAE8DnF,IAE3DvD,MAAK,SAAAC,GACJ,EAAKlC,MAAMyE,QAAQC,KAAK,QAEzBjC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,uCAAwCF,Q,iCAG3DvB,GACTX,KAAKM,SAAS,CACZsE,UAAW5E,KAAKP,MAAMmF,SACtBmF,iBAAkB/J,KAAKP,MAAMsK,oB,+BAIvB,IAAD,SACuD/J,KAAKP,MAA3DkF,EADD,EACCA,OAAQE,EADT,EACSA,MAAOC,EADhB,EACgBA,QAASF,EADzB,EACyBA,SAAUmF,EADnC,EACmCA,gBAEtCpE,EAAqBhB,EAAOpB,eAAiB,YAAc,OAE/D,OACE,oCAEE,kBAAC,IAAD,CAAMxD,UAAU,WAAWG,GAAI,KAA/B,QAGA,4BAAQD,QAASD,KAAKoK,SAASvK,KAAKG,MAAOD,UAAU,iBAArD,UAKA,yBAAKA,UAAS,uBAAkB4F,GAAsB5C,IAAK4B,EAAO3B,IAEhE,kBAAC,EAAD,CACEK,MAAOsB,EAAOtB,MACdC,OAAQqB,EAAOrB,OACfO,OAAQc,EAAO3B,GACfI,UAAW,KAGb,kBAACyC,EAAA,EAAD,KAEE,yBAAK9F,UAAU,iBACb,4BACG4E,EAAO3D,KADV,KACiB,0BAAMjB,UAAU,QAAQ4E,EAAO1D,UAEhD,4BAAK0D,EAAOyB,QAEd,yBAAKrG,UAAU,cAGf,kBAACsK,EAAA,EAAD,CAAMC,iBAAkB,GAEtB,kBAACC,EAAA,EAAD,CACEC,SAAU,EACVpE,MACE,0BAAMrG,UAAU,4BACd,kBAAC,IAAD,CAAiBI,KAAM6F,QAI3B,kBAACH,EAAA,EAAKc,KAAN,CAAW5G,UAAW4F,GACpB,6BAEGoE,EAAkB,kBAAC,EAAD,CAAapF,OAAQA,IAAa,KAErD,yBAAK5E,UAAU,WAAWE,QAAS,SAAAU,GAAC,OAAI,EAAKuJ,WAAWvJ,KACtD,kBAAC,IAAD,CAAiBR,KAAMsK,OAExB7F,EAAW,kBAAC,EAAD,CAAYI,SAAUL,EAAO3B,KAAS,QAKxD,kBAACuH,EAAA,EAAD,CACEC,SAAU,EACVpE,MACE,0BAAMrG,UAAU,4BACb,IACD,4BAAK8E,EAAQA,EAAMkB,OAAS,GAC5B,kBAAC,IAAD,CAAiB5F,KAAM8F,QAI3B,kBAACJ,EAAA,EAAKc,KAAN,CAAW5G,UAAW4F,GAEnBd,EACC,oCACE,8CACCA,EAAMhC,KAAI,SAAA6H,GACT,OACE,yBAAK3K,UAAU,aAAagD,IAAK2H,EAAK1H,IAEpC,kBAAC,EAAD,CACEI,UAAW,GACXC,MAAOqH,EAAKC,UAAYD,EAAKC,UAAY,IAE3C,yBAAK5K,UAAU,iBACb,6BACE,oCACE,4BAAK2K,EAAKjB,aACV,yBAAK1J,UAAU,gBACb,uBAAGA,UAAU,QAAb,OAAyB2K,EAAKhB,IAC9B,6BACA,6BACE,uBAAG3J,UAAU,QAAb,8BAGA,+BAAK2K,EAAK5B,iBAEZ,6BACE,uBAAG/I,UAAU,QAAb,wBAGA,+BAAK2K,EAAK3B,sBAEZ,6BACE,uBAAGhJ,UAAU,QAAb,WACA,2BAAI2K,EAAKzJ,UAEX,6BACE,uBAAGlB,UAAU,QAAb,QACA,2BAAI2K,EAAK1J,OAEX,6BACE,uBAAGjB,UAAU,QAAb,WACA,2BAAI2K,EAAKrE,UAEX,6BACE,uBAAGtG,UAAU,QAAb,cACA,2BAAI2K,EAAK9B,aAEX,6BACE,uBAAG7I,UAAU,QAAb,cACA,2BAAI2K,EAAK7B,sBAUzB,KACFhE,EAKE,KAJF,oCACE,6BACA,wEAIJ,yBAAK9E,UAAU,cACf,6BAEA,kBAAC,EAAD,CAAS4E,OAAQA,IAEjB,8BACW,KAGf,kBAAC4F,EAAA,EAAD,CACEC,SAAU,EACVpE,MACE,0BAAMrG,UAAU,4BACb,IACD,4BAAK+E,EAAUA,EAAQiB,OAAS,GAChC,kBAAC,IAAD,CAAiB5F,KAAME,QAI3B,kBAACwF,EAAA,EAAKc,KAAN,CAAW5G,UAAW4F,GACnBb,EAAQiB,OACP,oCACE,kJAKCjB,EAAQjC,KAAI,SAAA+H,GACX,OACE,yBAAK7K,UAAU,aAAagD,IAAK6H,EAAO5H,IAEtC,kBAAC,EAAD,CACEmB,aAAa,EACbd,MAAOuH,EAAOC,OAASD,EAAOC,OAAS,IAEzC,yBAAK9K,UAAU,iBACb,6BACE,wBAAIA,UAAU,QACX6K,EAAO5D,KADV,KACkB4D,EAAOzD,MAEzB,4BAAKyD,EAAOxD,aAOtB,KACFtC,EAAQiB,OAKN,KAJF,oCACE,6BACA,0EAGJ,yBAAKhG,UAAU,cACf,6BAEA,kBAAC,EAAD,CAAWiF,SAAUL,EAAO3B,KAM5B,8BACW,a,GApRczC,aCvBtBuK,E,iLAEjB,OACE,2BACE/K,UAAU,gBACV2H,KAAK,OACLE,YAAY,iBACZV,MAAOlH,KAAKR,MAAMuL,OAClBzB,SAAUtJ,KAAKR,MAAMwL,mB,GAROzK,aCgBf0K,E,YACnB,aAAe,IAAD,8BACZ,+CACKxL,MAAQ,CACX0B,WAAW,EACXuF,QAAS,GACTtF,QAAS,GACT2J,OAAQ,IAGV,EAAKC,aAAe,EAAKA,aAAanL,KAAlB,gBATR,E,iFAaZG,KAAK+E,Y,gCAGI,IAAD,OACJmG,EAAc,CAChB/C,QAAS,CACP,eAAgB,iCAChB,8BAA+B,MAInC5G,IACG0D,IAAI,CACH1D,IAAMC,IACJ,yDACA,GACA0J,GAEF3J,IAAMC,IACJ,yDACA,GACA0J,KAGHzJ,KACCF,IAAM2D,QAAO,SAAC9D,EAASsF,GACrB,EAAKpG,SAAS,CACZc,QAASA,EAAQQ,KACjB8E,QAASA,EAAQ9E,KACjBT,WAAW,QAIhBc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,+BAAgCF,Q,mCAGjDiJ,GACXnL,KAAKM,SAAS,CACZyK,OAAQI,EAAM9B,OAAOnC,MAAMkE,OAAO,EAAG,Q,+BAI/B,IAAD,EACyCpL,KAAKP,MAA7C0B,EADD,EACCA,UAAWuF,EADZ,EACYA,QAAStF,EADrB,EACqBA,QAAS2J,EAD9B,EAC8BA,OAGjCM,EAAgB3E,EAAQnB,QAAO,SAAAb,GACjC,OAAyC,IAAlCA,EAAKzD,QAAQqK,QAAQP,MAG1BQ,EAAanK,EAAQmE,QAAO,SAAAzC,GAC9B,OAA0C,IAAnCA,EAAM7B,QAAQqK,QAAQP,MAI3BS,EAAiBH,EAAc9F,QAAO,SAAAb,GAAI,OAAIA,EAAKnB,kBAEvD,OACE,8BACIpC,EA6CA,yBAAKpB,UAAU,mBACZ,IACD,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAiBI,KAAMsL,QA/C3B,oCAEE,kBAAC,EAAD,CAAQV,OAAQA,EAAQC,aAAchL,KAAKgL,eAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEU,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAApM,GAAK,OACX,kBAAC,EAAD,iBAAaA,EAAb,CAAoB4B,QAASmK,EAAYR,OAAQA,QAGrD,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,kBAAkBE,UAAWhF,IAC/C,kBAAC,IAAD,CAAO6E,OAAK,EAACC,KAAK,aAAaE,UAAW/D,IAC1C,kBAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,cAAcE,UAAWnD,IAC3C,kBAAC,IAAD,CACEgD,OAAK,EACLC,KAAK,oBACLE,UAAW3C,IAEb,kBAAC,IAAD,CACEwC,OAAK,EACLC,KAAK,eACLE,UAAW/B,IAEb,kBAAC,IAAD,CACE4B,OAAK,EACLC,KAAK,aACLC,OAAQ,SAAApM,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEkH,QAAS8E,EACTT,OAAQA,EACRxE,OAAO,UACPC,UAAU,8EACVC,gBAAgB,yBAChB+D,SAAS,IACT9E,aAAa,e,GA9GGnF,aCKrBuL,EAjBH,kBACV,oCACE,yBAAK/L,UAAU,OAEb,gCACE,kBAAC,IAAD,CAAMG,GAAG,KACP,yBAAKW,IAAK,eAAgBd,UAAU,OAAOgB,IAAI,WAGnD,yBAAKhB,UAAU,iBACb,kBAAC,EAAD,QAGJ,kBAAC,EAAD,QCPEgM,EAAcC,QACW,cAA7BlI,OAAOC,SAASkI,UAEe,UAA7BnI,OAAOC,SAASkI,UAEhBnI,OAAOC,SAASkI,SAAShC,MACvB,2DAsCN,SAASiC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT1K,MAAK,SAAA+K,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjN,QACf4M,UAAUC,cAAcO,YAI1B1K,QAAQC,IACN,iHAKEgK,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBrK,QAAQC,IAAI,sCAGRgK,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BvK,OAAM,SAAA+K,GACL7K,QAAQ6K,MAAM,4CAA6CA,MC1FjEC,IAASrB,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFsB,SAASC,eAAe,SDYnB,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwBvJ,OAAOC,SAASyD,MACpD8F,SAAWxJ,OAAOC,SAASuJ,OAIvC,OAGFxJ,OAAOyJ,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMkB,GAAN,sBAEPtB,IAgEV,SAAiCI,EAAOC,GAEtCoB,MAAMrB,GACH1K,MAAK,SAAAC,GAEJ,IAAM+L,EAAc/L,EAASyG,QAAQ3G,IAAI,gBAEnB,MAApBE,EAASwE,QACO,MAAfuH,IAA8D,IAAvCA,EAAYnC,QAAQ,cAG5Ce,UAAUC,cAAcoB,MAAMjM,MAAK,SAAA+K,GACjCA,EAAamB,aAAalM,MAAK,WAC7BqC,OAAOC,SAASC,eAKpBkI,EAAgBC,EAAOC,MAG1BnK,OAAM,WACLE,QAAQC,IACN,oEArFAwL,CAAwBzB,EAAOC,GAI/BC,UAAUC,cAAcoB,MAAMjM,MAAK,WACjCU,QAAQC,IACN,iHAMJ8J,EAAgBC,EAAOC,OClC/BE,I","file":"static/js/main.61d78e5e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFistRaised,\n  faSkullCrossbones\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class FooterNav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      homeActive: \"currently-active\",\n      demandsActive: \"\"\n    };\n\n    this.handleHomeClick = this.handleHomeClick.bind(this);\n    this.handleDemandsClick = this.handleDemandsClick.bind(this);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"footer-nav\">\n          <div\n            className={`icon-nav ${this.state.homeActive}`}\n            onClick={this.handleHomeClick}\n          >\n            <Link to=\"/\">\n              <FontAwesomeIcon icon={faSkullCrossbones} />\n            </Link>\n            <h6>Actions</h6>\n          </div>\n          <div\n            className={`icon-nav ${this.state.demandsActive}`}\n            onClick={this.handleDemandsClick}\n          >\n            <Link to=\"/suggested\">\n              <FontAwesomeIcon icon={faFistRaised} />\n            </Link>\n            <h6>Demands</h6>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  handleHomeClick() {\n    this.setState({\n      homeActive: \"currently-active\",\n      demandsActive: \"\"\n    });\n  }\n\n  handleDemandsClick() {\n    this.setState({\n      homeActive: \"\",\n      demandsActive: \"currently-active\"\n    });\n  }\n}\n","import React, { Component } from \"react\";\n// import axios from \"axios\";\n\nexport default class Story extends Component {\n  updateTwitter(handle) {\n    this.props.handleStateChange(handle);\n  }\n\n  render() {\n    return (\n      <button\n        className=\"story\"\n        onClick={e => this.props.onClick(this.props.twitterHandle)}\n      >\n        <div className=\"mask\">\n          <img src={this.props.img} alt=\"img\"></img>\n        </div>\n        <h5>{this.props.city}</h5>\n        <h5>{this.props.country}</h5>\n      </button>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Story from \"./Story\";\nimport { Timeline } from \"react-twitter-widgets\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Stories extends Component {\n  constructor() {\n    super();\n    this.state = {\n      twitterHandle: \"\",\n      isLoading: true,\n      stories: []\n    };\n    this.updateTwitter = this.updateTwitter.bind(this);\n  }\n\n  componentDidMount() {\n    this.getStories();\n  }\n\n  getStories() {\n    axios\n      .get(\"https://extinction-rebellion.herokuapp.com/api/stories\")\n      .then(response => {\n        let sortedStories = response.data.sort((a, b) =>\n          b.city.localeCompare(a.city)\n        );\n\n        this.setState({\n          stories: sortedStories,\n          isLoading: false\n        });\n      })\n      .catch(err => console.log(\"error in Stories.js:getStories()\", err));\n  }\n\n  // Update twitterfeed to the profile belonging to the clicked story\n  updateTwitter(handle) {\n    this.setState({ twitterHandle: handle });\n  }\n\n  render() {\n    const handle = this.state.twitterHandle;\n    let twitterFeed;\n\n    if (handle) {\n      twitterFeed = (\n        <Timeline\n          dataSource={{\n            sourceType: \"profile\",\n            screenName: handle\n          }}\n          options={{\n            username: handle,\n            height: \"1000\"\n          }}\n        />\n      );\n    } else {\n      twitterFeed = (\n        <Timeline\n          dataSource={{\n            sourceType: \"profile\",\n            screenName: \"ExtinctionR\"\n          }}\n          options={{\n            username: \"ExtinctionR\",\n            height: \"1000\"\n          }}\n        />\n      );\n    }\n\n    return (\n      <>\n        <div className=\"story-section stories-background-color\">\n          <div className=\"stories\">\n            <Link to=\"/add-story\">\n              <div className=\"add-button\">\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n            </Link>\n            {this.state.stories.map(story => {\n              return (\n                <Story\n                  key={story.id}\n                  twitterHandle={story.twitterHandle}\n                  onClick={this.updateTwitter}\n                  img={story.img}\n                  city={story.city}\n                  country={story.country}\n                ></Story>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"centerContent\">\n          <div className=\"selfCenter standardWidth\">{twitterFeed}</div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMale,\n  faPenFancy,\n  faCaretUp,\n  faCaretDown\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport class Voting extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      votes: this.props.votes\n    };\n  }\n\n  editDemand(newVote) {\n    axios\n      .request({\n        method: \"patch\",\n        url: `https://extinction-rebellion.herokuapp.com/api/demands/${this.props.cardId}`,\n        data: newVote\n      })\n      .then(response => {\n        window.location.reload();\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(\"Error from Voting.js:editDemand\", err));\n  }\n\n  upvote = () => {\n    let newVote;\n    if (this.props.voteLimit === this.state.votes - 1) {\n      newVote = {\n        isSent: true,\n        isBeingDefined: false,\n        votes: this.state.votes + 1\n      };\n    } else {\n      newVote = {\n        votes: this.state.votes + 1\n      };\n    }\n    this.editDemand(newVote);\n  };\n\n  downvote = () => {\n    const newVote = {\n      votes: this.state.votes - 1\n    };\n    this.editDemand(newVote);\n  };\n\n  render() {\n    return (\n      <div className=\"voting-section\">\n        {this.props.showAsRebel ? (\n          <div className=\"icon-section\">\n            <button className=\"fa-icons\" onClick={this.upvote}>\n              <h6>{this.state.votes}</h6>\n              <FontAwesomeIcon className=\"btn-icon\" icon={faMale} />\n            </button>\n          </div>\n        ) : this.props.isSent ? (\n          <div className=\"icon-section\">\n            <h6>{this.state.votes}</h6>\n            <FontAwesomeIcon\n              className=\"btn-icon\"\n              icon={faPenFancy}\n              onClick={this.upvote}\n            />\n          </div>\n        ) : (\n          <div className=\"icon-section\">\n            <FontAwesomeIcon\n              className=\"btn-icon\"\n              icon={faCaretUp}\n              onClick={this.upvote}\n            />\n            <h6>{this.state.votes}</h6>\n            <FontAwesomeIcon\n              className=\"btn-icon\"\n              icon={faCaretDown}\n              onClick={this.downvote}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default Voting;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\n\nimport Voting from \"./Voting\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faFistRaised,\n  faWrench\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class DemandItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      card: props.card,\n      demand: \"\",\n      isLoading: true,\n      showEdit: false,\n      edits: [],\n      actions: [],\n      isSent: props.isSent\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    let demandId = this.state.card.id;\n    axios\n      .all([\n        axios.get(\n          `https://extinction-rebellion.herokuapp.com/api/demands/${demandId}`\n        ),\n        axios.get(\"https://extinction-rebellion.herokuapp.com/api/edits\"),\n        axios.get(\"https://extinction-rebellion.herokuapp.com/api/actions\")\n      ])\n      .then(\n        axios.spread((demand, edits, actions) => {\n          const editsArray = edits.data;\n          const actionsArray = actions.data;\n          const criteria = demandId;\n\n          const demandEdits = editsArray.filter(\n            item => item.demandId === criteria\n          );\n          const demandActions = actionsArray.filter(\n            item => item.demandId === criteria\n          );\n\n          this.setState({\n            demand: demand.data,\n            edits: demandEdits,\n            actions: demandActions,\n            isLoading: false\n          });\n        })\n      )\n      .catch(err => console.log(\"error in DemandItem.js:getData()\", err));\n  }\n\n  render() {\n    const { card, edits, actions } = this.state;\n\n    let isSuggested = card.isBeingDefined;\n    let cardBackgroundType = isSuggested ? \"suggested\" : \"sent\";\n\n    return (\n      <div className={`card-wrapper ${cardBackgroundType}`} key={card.id}>\n        <div className=\"flex-spread\">\n          <div className=\"card-indicators\">\n            <div as={Card.Header} className=\"icon-section\">\n              {card.isSent ? (\n                <>\n                  <h6>{edits ? edits.length : 0}</h6>\n                  <FontAwesomeIcon icon={faBook} />\n                </>\n              ) : (\n                <>\n                  <h6>{edits ? edits.length : 0}</h6>\n                  <FontAwesomeIcon icon={faWrench} />\n                </>\n              )}\n            </div>\n\n            <div as={Card.Header} className=\"icon-section\">\n              <h6>{actions ? actions.length : 0}</h6>\n              <FontAwesomeIcon icon={faFistRaised} />\n            </div>\n          </div>\n\n          {/* Section with votes, appears outside toggle so can use the voting functionality */}\n          <Voting\n            votes={card.votes}\n            isSent={card.isSent}\n            cardId={card.id}\n            voteLimit={10}\n          />\n        </div>\n        <Card>\n          <Link to={`/demands/${card.id}`}>\n            <div className=\"demand-header\">\n              {/* Status */}\n              {!isSuggested && card.status ? (\n                <p className={`pill ${card.isRebel ? \"red\" : \"darkblue\"}`}>\n                  {card.status}\n                </p>\n              ) : null}\n              {/* Country */}\n              <h6>\n                {card.city}, <span className=\"bold\">{card.country}</span>\n              </h6>\n\n              {/* Main card header */}\n              <h5>{card.title}</h5>\n              <h6>{card.summary}</h6>\n            </div>\n\n            <div className=\"separator\"></div>\n          </Link>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nimport DemandItem from \"./DemandItem\";\n\nexport default class Demands extends Component {\n  render() {\n    const {\n      header,\n      subheader,\n      backgroundColor,\n      demands,\n      isSent,\n      isSuggested\n    } = this.props;\n\n    return (\n      <div className=\"demand-section\">\n        <Card>\n          <div className={`demand-section-header ${backgroundColor}`}>\n            <Link to=\"/add-demand\">\n              <div className=\"add-button\">\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n            </Link>\n            <h2>\n              {header} ({demands.length || 0})\n            </h2>\n            <div className=\"tight-header no-margin\">\n              <p>{subheader}</p>\n            </div>\n          </div>\n          {/* Collapsed accordion section with all demands in the set */}\n          <Card.Body>\n            <Accordion>\n              {!demands.length ? (\n                <div className=\"tight-header\">\n                  <p className=\"text-center\">(Nothing here yet.)</p>\n                </div>\n              ) : null}\n              {demands.map(card => {\n                return (\n                  <DemandItem\n                    key={card.id}\n                    card={card}\n                    isSent={isSent}\n                    isSuggested={isSuggested}\n                  ></DemandItem>\n                );\n              })}\n            </Accordion>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class AddAction extends Component {\n  addAction(newAction) {\n    axios\n      .request({\n        method: \"post\",\n        url: \"https://extinction-rebellion.herokuapp.com/api/actions\",\n        data: newAction\n      })\n      .then(response => {\n        alert(\"Saved!\");\n        window.location.reload();\n      })\n      .catch(err => console.log(\"Error from AddAction.js:addAction\", err));\n  }\n\n  onSubmit(e) {\n    const newAction = {\n      demandId: this.props.demandId,\n      date: this.refs.date.value,\n      time: this.refs.time.value,\n      name: this.refs.name.value,\n      telegram: this.refs.telegram.value\n    };\n    console.log(\"newAction\", newAction);\n\n    this.addAction(newAction);\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n        <h6>\n          Create new action. Handle all communication for this action via\n          telegram, so start by{\" \"}\n          <a href=\"https://blog.en.uptodown.com/how-to-create-groups-and-channels-telegram/\">\n            creating a group on telegram\n          </a>{\" \"}\n          and adding the name of it below.\n        </h6>\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"date\"\n              ref=\"date\"\n              placeholder=\"Date of action\"\n            />\n            <label htmlFor=\"date\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"time\"\n              ref=\"time\"\n              placeholder=\"time\"\n            />\n            <label htmlFor=\"time\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"name\"\n              ref=\"name\"\n              placeholder=\"Name of action\"\n            />\n            <label htmlFor=\"name\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"telegram\"\n              ref=\"telegram\"\n              placeholder=\"Telegram group name\"\n            />\n            <label htmlFor=\"telegram\"></label>\n          </div>\n          <input\n            className=\"form-input tweak-background-color btn\"\n            type=\"submit\"\n            value=\"Add new action\"\n          />\n        </form>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class AddStory extends Component {\n  onSubmit(e) {\n    axios\n      .get(\"https://api.unsplash.com/search/photos\", {\n        params: { query: this.refs.city.value },\n        page: 1,\n        per_page: 1,\n        headers: {\n          Authorization:\n            \"Client-ID cb32c91579c47c9f70fd331095157ba5134b18d039ce6980b4403f3d8a9b6000\"\n        }\n      })\n      .then(response => {\n        let cityPic =\n          response.data.results.length > 0\n            ? response.data.results[0].urls.small\n            : \"https://images.unsplash.com/photo-1571238052771-c6e35627d337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=190&q=80\";\n\n        const newStory = {\n          img: cityPic,\n          city: this.refs.city.value,\n          country: this.refs.country.value,\n          twitterHandle: this.refs.twitter.value\n        };\n\n        axios\n          .request({\n            method: \"post\",\n            url: \"https://extinction-rebellion.herokuapp.com/api/stories\",\n            data: newStory\n          })\n          .then(response => {\n            this.props.history.push(\"/\");\n          })\n          .catch(err => console.log(\"Error from StoriesAdd.js:addStory\", err));\n      });\n\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n        <Link className=\"btn grey\" to=\"/\">\n          Back\n        </Link>\n        <Card className=\"add-story\">\n          <h6>Add a new XR faction.</h6>\n\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <div className=\"flex-spread\">\n              <div className=\"form-group\">\n                <input\n                  className=\"form-input\"\n                  type=\"text\"\n                  name=\"city\"\n                  ref=\"city\"\n                  placeholder=\"City\"\n                />\n                <label htmlFor=\"city\"></label>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"country\"\n                  ref=\"country\"\n                  placeholder=\"Country\"\n                />\n                <label htmlFor=\"country\"></label>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"twitter\"\n                ref=\"twitter\"\n                placeholder=\"Twitter Handle\"\n              />\n              <label htmlFor=\"twitter\"></label>\n            </div>\n            <input\n              className=\"form-input tweak-background-color btn float-right\"\n              type=\"submit\"\n              value=\"Add new XR faction\"\n            />\n          </form>\n          <br></br>\n        </Card>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class AddDemand extends Component {\n  addDemand(newDemand) {\n    axios\n      .request({\n        method: \"post\",\n        url: \"https://extinction-rebellion.herokuapp.com/api/demands\",\n        data: newDemand\n      })\n      .then(response => {\n        window.location.reload();\n        this.props.history.push(\"/\");\n        console.log(response);\n      })\n      .catch(err => console.log(\"Error from AddDemand.js:addDemand\", err));\n  }\n\n  onSubmit(e) {\n    const newDemand = {\n      isBeingDefined: true,\n      title: this.refs.title.value || \"No title yet\",\n      city: this.refs.city.value || \"No city yet\",\n      country: this.refs.country.value || \"No country yet\",\n      summary: this.refs.summary.value || \"No summary yet\",\n      background: this.refs.background.value || \"No background yet\",\n      indicators: this.refs.indicators.value || \"No indicators yet\",\n      representative: this.refs.representative.value || \"No representative yet\",\n      representativeEmail:\n        this.refs.representativeEmail.value ||\n        \"No email for the representative yet\"\n    };\n    this.addDemand(newDemand);\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n        <Link className=\"btn grey\" to=\"/\">\n          Back\n        </Link>\n        <div className=\"add-demand\">\n          <h6>\n            It doesn't have to be perfect, we can make it great together later.\n          </h6>\n          <br></br>\n\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"title\"\n                ref=\"title\"\n                placeholder=\"Title\"\n              />\n              <label htmlFor=\"title\"></label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"city\"\n                ref=\"city\"\n                placeholder=\"City\"\n              />\n              <label htmlFor=\"city\"></label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"country\"\n                ref=\"country\"\n                placeholder=\"Country\"\n              />\n              <label htmlFor=\"country\"></label>\n\n              <textarea\n                className=\"form-control\"\n                rows=\"5\"\n                type=\"text\"\n                name=\"summary\"\n                ref=\"summary\"\n                placeholder=\"Summary\"\n              />\n              <label htmlFor=\"summary\"></label>\n\n              <textarea\n                className=\"form-control\"\n                rows=\"4\"\n                type=\"text\"\n                name=\"background\"\n                ref=\"background\"\n                placeholder=\"Background\"\n              />\n              <label htmlFor=\"background\"></label>\n\n              <textarea\n                className=\"form-control\"\n                rows=\"3\"\n                type=\"text\"\n                name=\"indicators\"\n                ref=\"indicators\"\n                placeholder=\"Indicators\"\n              />\n              <label htmlFor=\"indicators\"></label>\n              <h6>\n                <span className=\"bold\">Representative</span> to eventually send\n                the demand to. This should be the person who has the authority\n                to raise this issue in parliament.\n                <br></br>If you don't know, leave it blank for now.\n              </h6>\n              <br></br>\n\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"representative\"\n                ref=\"representative\"\n                placeholder=\"Name of representative\"\n              />\n              <label htmlFor=\"representative\"></label>\n\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                name=\"representativeEmail\"\n                ref=\"representativeEmail\"\n                placeholder=\"Email of representative\"\n              />\n              <label htmlFor=\"representativeEmail\"></label>\n            </div>\n\n            {/* <br></br>\n            <h6>One time linking setup:</h6>\n            <div className=\"list-group-item\">\n              <input\n                type=\"checkbox\"\n                ref=\"createdTwitter\"\n                style={{\n                  height: 16,\n                  width: 16\n                }}\n              />\n              <span>\n                Create a new account on Twitter called{\" \"}\n                <span className=\"bold\">@xr110references</span>, after this\n                initial setup you will not need to touch it again.\n              </span>\n            </div>\n            <div className=\"list-group-item\">\n              <input\n                type=\"checkbox\"\n                ref=\"createdIFTTT\"\n                style={{\n                  height: 16,\n                  width: 16\n                }}\n              />\n              <span>\n                Create an account at{\" \"}\n                <a className=\"bold\" href=\"https://iftt.com\">\n                  IFTTT\n                </a>\n              </span>\n            </div>\n            <div className=\"list-group-item\">\n              <input\n                type=\"checkbox\"\n                ref=\"createdScript\"\n                style={{\n                  height: 16,\n                  width: 16\n                }}\n              />\n              <span>\n                Setup autotweeting all Tweets with #xr110 through this{\" \"}\n                <a\n                  className=\"bold\"\n                  href=\"https://ifttt.com/applets/SMvaxczG-if-hashtag-then-retweet-it\"\n                >\n                  IFTTT recipe.\n                </a>\n              </span>\n            </div>\n            <p>\n              Hurray! Now all Tweets anyone does with #xr110 gets automatically\n              pulled into the # section of your new petition. You won't have to\n              do anything.\n            </p> */}\n            <input\n              className=\"form-input tweak-background-color btn float-right\"\n              type=\"submit\"\n              value=\"Add new demand\"\n            />\n          </form>\n          <br></br>\n          <br></br>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class EditDemand extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isBeingDefined: true, //this should be dealt with differently, should only be true if the demand does not meet certain criteria (TBD)\n      title: \"\",\n      city: \"\",\n      country: \"\",\n      summary: \"\",\n      background: \"\",\n      indicators: \"\",\n      representative: \"\",\n      representativeEmail: \"\"\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDemandDetails();\n  }\n\n  getDemandDetails() {\n    let demandId = this.props.demandId;\n    axios\n      .get(`https://extinction-rebellion.herokuapp.com/api/demands/${demandId}`)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          city: response.data.city,\n          country: response.data.country,\n          summary: response.data.summary,\n          background: response.data.background,\n          indicators: response.data.indicators,\n          representative: response.data.representative,\n          representativeEmail: response.data.representativeEmail\n        });\n      })\n      .catch(err =>\n        console.log(\"Error from EditDemand.js:getDemandDetails\", err)\n      );\n  }\n\n  editDemand(newDemand) {\n    axios\n      .request({\n        method: \"put\",\n        url: `https://extinction-rebellion.herokuapp.com/api/demands/${this.state.id}`,\n        data: newDemand\n      })\n      .then(response => {\n        alert(\"Saved\");\n        window.location.reload();\n        this.props.history.push(\"/\");\n        console.log(response);\n      })\n      .catch(err => console.log(\"Error from EditDemand.js:editDemand\", err));\n  }\n\n  onSubmit(e) {\n    const newDemand = {\n      isBeingDefined: true,\n      title: this.refs.title.value,\n      city: this.refs.city.value,\n      country: this.refs.country.value,\n      summary: this.refs.summary.value,\n      background: this.refs.background.value,\n      indicators: this.refs.indicators.value,\n      representative: this.refs.representative.value,\n      representativeEmail: this.refs.representativeEmail.value\n    };\n    this.editDemand(newDemand);\n    e.preventDefault();\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        {/* <Link className=\"btn grey\" to=\"/\">\n          Back\n        </Link> */}\n        <div className=\"add-demand\">\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"title\"\n                ref=\"title\"\n                placeholder=\"Title\"\n                value={this.state.title}\n                onChange={this.handleInputChange}\n              />\n              <label htmlFor=\"title\"></label>\n            </div>\n            <div className=\"flex-spread\">\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"city\"\n                  ref=\"city\"\n                  placeholder=\"City\"\n                  value={this.state.city}\n                  onChange={this.handleInputChange}\n                />\n                <label htmlFor=\"city\"></label>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"country\"\n                  ref=\"country\"\n                  placeholder=\"Country\"\n                  value={this.state.country}\n                  onChange={this.handleInputChange}\n                />\n                <label htmlFor=\"country\"></label>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control\"\n                rows=\"2\"\n                type=\"text\"\n                name=\"summary\"\n                ref=\"summary\"\n                placeholder=\"Summary\"\n                value={this.state.summary}\n                onChange={this.handleInputChange}\n              />\n              <label htmlFor=\"summary\"></label>\n            </div>\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control\"\n                rows=\"4\"\n                type=\"text\"\n                name=\"background\"\n                ref=\"background\"\n                placeholder=\"Background\"\n                value={this.state.background}\n                onChange={this.handleInputChange}\n              />\n              <label htmlFor=\"background\"></label>\n            </div>\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control\"\n                rows=\"3\"\n                type=\"text\"\n                name=\"indicators\"\n                ref=\"indicators\"\n                placeholder=\"Indicators\"\n                value={this.state.indicators}\n                onChange={this.handleInputChange}\n              />\n              <label htmlFor=\"indicators\"></label>\n            </div>\n            <br></br>\n\n            <div className=\"flex-spread\">\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  name=\"representative\"\n                  ref=\"representative\"\n                  placeholder=\"Rep name\"\n                  value={this.state.representative}\n                  onChange={this.handleInputChange}\n                />\n                <label htmlFor=\"representative\"></label>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  type=\"email\"\n                  name=\"representativeEmail\"\n                  ref=\"representativeEmail\"\n                  placeholder=\"Email\"\n                  value={this.state.representativeEmail}\n                  onChange={this.handleInputChange}\n                />\n                <label htmlFor=\"representativeEmail\"></label>\n              </div>\n            </div>\n\n            <input\n              className=\"form-input tweak-background-color btn float-right\"\n              type=\"submit\"\n              value=\"Save\"\n            />\n          </form>\n          <br></br>\n          <br></br>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class AddEdit extends Component {\n  addEdit(newEdit) {\n    axios\n      .request({\n        method: \"post\",\n        url: \"https://extinction-rebellion.herokuapp.com/api/edits\",\n        data: newEdit\n      })\n      .then(response => {\n        alert(\"Saved!\");\n        window.location.reload();\n      })\n      .catch(err => console.log(\"Error from AddEdit.js:addEdit\", err));\n  }\n\n  onSubmit(e) {\n    const demand = this.props.demand;\n    const newEdit = {\n      demandId: demand.id,\n      editSummary: this.refs.editSummary.value,\n      by: this.refs.by.value,\n      country: this.refs.country.value\n        ? this.refs.country.value\n        : demand.country,\n      city: this.refs.city.value ? this.refs.city.value : demand.city,\n      title: this.refs.title.value ? this.refs.title.value : demand.title,\n      summary: this.refs.summary.value\n        ? this.refs.summary.value\n        : demand.summary,\n      background: this.refs.background.value\n        ? this.refs.background.value\n        : demand.background,\n      indicators: this.refs.indicators.value\n        ? this.refs.indicators.value\n        : demand.indicators,\n      representative: this.refs.representative.value\n        ? this.refs.representative.value\n        : demand.repesentative,\n      representativeEmail: this.refs.representativeEmail.value\n        ? this.refs.representativeEmail.value\n        : demand.representativeEmail\n    };\n    console.log(\"newEdit\", newEdit);\n\n    this.addEdit(newEdit);\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n        <h6>\n          Add a new edit here. Once it reaches 10 upvotes it will update the\n          demand.\n        </h6>\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"editSummary\"\n              ref=\"editSummary\"\n              placeholder=\"Edit Summary*\"\n            />\n            <label htmlFor=\"editSummary\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"by\"\n              ref=\"by\"\n              placeholder=\"By whom*\"\n            />\n            <label htmlFor=\"by\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"country\"\n              ref=\"country\"\n              placeholder=\"Country\"\n            />\n            <label htmlFor=\"country\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"city\"\n              ref=\"city\"\n              placeholder=\"City\"\n            />\n            <label htmlFor=\"city\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"title\"\n              ref=\"title\"\n              placeholder=\"Title\"\n            />\n            <label htmlFor=\"title\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"summary\"\n              ref=\"summary\"\n              placeholder=\"Summary\"\n            />\n            <label htmlFor=\"summary\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"background\"\n              ref=\"background\"\n              placeholder=\"Background\"\n            />\n            <label htmlFor=\"background\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"indicators\"\n              ref=\"indicators\"\n              placeholder=\"Indicators\"\n            />\n            <label htmlFor=\"indicators\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"representative\"\n              ref=\"representative\"\n              placeholder=\"Representative\"\n            />\n            <label htmlFor=\"representative\"></label>\n\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"representativeEmail\"\n              ref=\"representativeEmail\"\n              placeholder=\"Representative Email\"\n            />\n            <label htmlFor=\"representativeEmail\"></label>\n          </div>\n          <input\n            className=\"form-input tweak-background-color btn\"\n            type=\"submit\"\n            value=\"Add new Edit\"\n          />\n        </form>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Description extends Component {\n  render() {\n    const { demand } = this.props;\n\n    return (\n      <>\n        <div className=\"tight-header text-align-right\">\n          <p>Responsible representative</p>\n          <p className=\"bold\">\n            {demand.representative\n              ? demand.representative\n              : \"No representative yet\"}\n          </p>\n        </div>\n\n        <h6 className=\"bold\">Summary</h6>\n        <p>{demand.summary ? demand.summary : \"No summary yet\"}</p>\n        <h6 className=\"bold\">Background</h6>\n        <p>{demand.background ? demand.background : \"No background yet\"}</p>\n        <h6 className=\"bold\">Indicators</h6>\n        <p>{demand.indicators ? demand.indicators : \"No indicators yet\"}</p>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { Tabs, Tab } from \"react-bootstrap\";\n\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\n\nimport AddAction from \"./AddAction\";\nimport AddEdit from \"./AddEdit\";\n\nimport EditDemand from \"./EditDemand\";\n\nimport Description from \"./DemandComponents/Description\";\n\nimport Voting from \"./Voting\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faEdit,\n  faFistRaised,\n  faWrench\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class DemandDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      demand: \"\",\n      isLoading: true,\n      showDescription: true,\n      showEdit: false,\n      edits: [],\n      actions: [],\n      currentDemandId: props.match.params.id\n    };\n\n    this.toggleEdit = this.toggleEdit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    let demandId = this.props.match.params.id;\n    axios\n      .all([\n        axios.get(\n          `https://extinction-rebellion.herokuapp.com/api/demands/${demandId}`\n        ),\n        axios.get(\"https://extinction-rebellion.herokuapp.com/api/edits\"),\n        axios.get(\"https://extinction-rebellion.herokuapp.com/api/actions\")\n      ])\n      .then(\n        axios.spread((demand, edits, actions) => {\n          const editsArray = edits.data;\n          const actionsArray = actions.data;\n          const criteria = this.state.currentDemandId;\n\n          const demandEdits = editsArray.filter(\n            item => item.demandId === criteria\n          );\n\n          const demandActions = actionsArray.filter(\n            item => item.demandId === criteria\n          );\n\n          this.setState({\n            demand: demand.data,\n            edits: demandEdits,\n            actions: demandActions,\n            isLoading: false\n          });\n        })\n      )\n      .catch(err => console.log(\"error in DemandDetails.js:getData()\", err));\n  }\n\n  onDelete() {\n    let demandId = this.state.demand.id;\n    axios\n      .delete(\n        `https://extinction-rebellion.herokuapp.com/api/demands/${demandId}`\n      )\n      .then(response => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(\"Error from DemandDetails.js:onDelete\", err));\n  }\n\n  toggleEdit(e) {\n    this.setState({\n      showEdit: !this.state.showEdit,\n      showDescription: !this.state.showDescription\n    });\n  }\n\n  render() {\n    const { demand, edits, actions, showEdit, showDescription } = this.state;\n\n    let cardBackgroundType = demand.isBeingDefined ? \"suggested\" : \"sent\";\n\n    return (\n      <>\n        {/* Back, edit, delete */}\n        <Link className=\"btn grey\" to={\"/\"}>\n          Back\n        </Link>\n        <button onClick={this.onDelete.bind(this)} className=\"btn red light\">\n          Delete\n        </button>\n\n        {/* Details for item */}\n        <div className={`card-wrapper ${cardBackgroundType}`} key={demand.id}>\n          {/* Section with votes, appears outside toggle so can use the voting functionality */}\n          <Voting\n            votes={demand.votes}\n            isSent={demand.isSent}\n            cardId={demand.id}\n            voteLimit={10}\n          />\n\n          <Card>\n            {/* Main card header */}\n            <div className=\"demand-header\">\n              <h6>\n                {demand.city}, <span className=\"bold\">{demand.country}</span>\n              </h6>\n              <h5>{demand.title}</h5>\n            </div>\n            <div className=\"separator\"></div>\n\n            {/* Card Tabs */}\n            <Tabs defaultActiveKey={1}>\n              {/* Demand description tab trigger */}\n              <Tab\n                eventKey={1}\n                title={\n                  <span className=\"icon-section card-header\">\n                    <FontAwesomeIcon icon={faBook} />\n                  </span>\n                }\n              >\n                <Card.Body className={cardBackgroundType}>\n                  <div>\n                    {/* Demand description section, if the user is in editing mode this section is hidden*/}\n                    {showDescription ? <Description demand={demand} /> : null}\n                    {/* Toggles the diting section of the demand, gets accepted directly and should only be accessed by admin */}\n                    <div className=\"edit-btn\" onClick={e => this.toggleEdit(e)}>\n                      <FontAwesomeIcon icon={faEdit} />\n                    </div>\n                    {showEdit ? <EditDemand demandId={demand.id} /> : null}\n                  </div>\n                </Card.Body>\n              </Tab>\n\n              <Tab\n                eventKey={2}\n                title={\n                  <span className=\"icon-section card-header\">\n                    {\" \"}\n                    <h6>{edits ? edits.length : 0}</h6>\n                    <FontAwesomeIcon icon={faWrench} />\n                  </span>\n                }\n              >\n                <Card.Body className={cardBackgroundType}>\n                  {/* Edits - these are not automatically accepted, but instead end up in a separate model */}\n                  {edits ? (\n                    <>\n                      <h5>Proposed edits</h5>\n                      {edits.map(edit => {\n                        return (\n                          <div className=\"rebel-card\" key={edit.id}>\n                            {/* Joined people */}\n                            <Voting\n                              voteLimit={10}\n                              votes={edit.editVotes ? edit.editVotes : 0}\n                            ></Voting>\n                            <div className=\"rebel-content\">\n                              <div>\n                                <>\n                                  <h6>{edit.editSummary}</h6>\n                                  <div className=\"tight-header\">\n                                    <p className=\"grey\">By: {edit.by}</p>\n                                    <br></br>\n                                    <div>\n                                      <p className=\"bold\">\n                                        Responsible representative\n                                      </p>\n                                      <p> {edit.representative}</p>\n                                    </div>\n                                    <div>\n                                      <p className=\"bold\">\n                                        Representative email\n                                      </p>\n                                      <p> {edit.representativeEmail}</p>\n                                    </div>\n                                    <div>\n                                      <p className=\"bold\">Country</p>\n                                      <p>{edit.country}</p>\n                                    </div>\n                                    <div>\n                                      <p className=\"bold\">City</p>\n                                      <p>{edit.city}</p>\n                                    </div>\n                                    <div>\n                                      <p className=\"bold\">Summary</p>\n                                      <p>{edit.summary}</p>\n                                    </div>\n                                    <div>\n                                      <p className=\"bold\">Background</p>\n                                      <p>{edit.background}</p>\n                                    </div>\n                                    <div>\n                                      <p className=\"bold\">Indicators</p>\n                                      <p>{edit.indicators}</p>\n                                    </div>\n                                  </div>\n                                </>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </>\n                  ) : null}\n                  {!edits ? (\n                    <>\n                      <br></br>\n                      <h6>There are no edits yet, start one below</h6>\n                    </>\n                  ) : null}\n\n                  <div className=\"separator\"></div>\n                  <br></br>\n                  {/* Add new action */}\n                  <AddEdit demand={demand} />\n\n                  <br></br>\n                </Card.Body>{\" \"}\n              </Tab>\n\n              <Tab\n                eventKey={3}\n                title={\n                  <span className=\"icon-section card-header\">\n                    {\" \"}\n                    <h6>{actions ? actions.length : 0}</h6>\n                    <FontAwesomeIcon icon={faFistRaised} />\n                  </span>\n                }\n              >\n                <Card.Body className={cardBackgroundType}>\n                  {actions.length ? (\n                    <>\n                      <h6>\n                        Join by clicking the join button on the right of the\n                        action, you'll get sent a telegram invitation with more\n                        info.\n                      </h6>\n                      {actions.map(action => {\n                        return (\n                          <div className=\"rebel-card\" key={action.id}>\n                            {/* Joined people */}\n                            <Voting\n                              showAsRebel={true}\n                              votes={action.joined ? action.joined : 0}\n                            ></Voting>\n                            <div className=\"rebel-content\">\n                              <div>\n                                <h6 className=\"bold\">\n                                  {action.date}, {action.time}\n                                </h6>\n                                <h6>{action.name}</h6>\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </>\n                  ) : null}\n                  {!actions.length ? (\n                    <>\n                      <br></br>\n                      <h6>There are no actions yet, start one below</h6>\n                    </>\n                  ) : null}\n                  <div className=\"separator\"></div>\n                  <br></br>\n                  {/* Add new action */}\n                  <AddAction demandId={demand.id} />\n                  {/* <Link to={`/${demand.id}/add-action`}>\n                        <div className=\"add-button\">\n                          <FontAwesomeIcon icon={faPlus} />\n                        </div>\n                      </Link> */}\n                  <br></br>\n                </Card.Body>{\" \"}\n              </Tab>\n            </Tabs>\n          </Card>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <input\n        className=\"search-filter\"\n        type=\"text\"\n        placeholder=\"Choose Country\"\n        value={this.props.search}\n        onChange={this.props.updateSearch}\n      ></input>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../sass/main.scss\";\nimport axios from \"axios\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Stories from \"./Stories\";\nimport Demands from \"./Demands\";\nimport AddAction from \"./AddAction\";\nimport AddStory from \"./AddStory\";\nimport AddDemand from \"./AddDemand\";\nimport EditDemand from \"./EditDemand\";\n\nimport DemandDetails from \"./DemandDetails\";\nimport Search from \"./Search\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAmericanSignLanguageInterpreting } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Routes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      demands: [],\n      stories: [],\n      search: \"\"\n    };\n\n    this.updateSearch = this.updateSearch.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    let axiosConfig = {\n      headers: {\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    };\n\n    axios\n      .all([\n        axios.get(\n          \"https://extinction-rebellion.herokuapp.com/api/stories\",\n          {},\n          axiosConfig\n        ),\n        axios.get(\n          \"https://extinction-rebellion.herokuapp.com/api/demands\",\n          {},\n          axiosConfig\n        )\n      ])\n      .then(\n        axios.spread((stories, demands) => {\n          this.setState({\n            stories: stories.data,\n            demands: demands.data,\n            isLoading: false\n          });\n        })\n      )\n      .catch(err => console.log(\"error in Routes.js:getData()\", err));\n  }\n\n  updateSearch(event) {\n    this.setState({\n      search: event.target.value.substr(0, 20)\n    });\n  }\n\n  render() {\n    const { isLoading, demands, stories, search } = this.state;\n\n    //Return only demands which country name matches what's entered in the search field\n    let filteredCards = demands.filter(card => {\n      return card.country.indexOf(search) !== -1;\n    });\n\n    let xrFactions = stories.filter(story => {\n      return story.country.indexOf(search) !== -1;\n    });\n\n    // Define subsets of main card set\n    let suggestedCards = filteredCards.filter(card => card.isBeingDefined);\n\n    return (\n      <main>\n        {!isLoading ? (\n          <>\n            {/* Searchfield */}\n            <Search search={search} updateSearch={this.updateSearch}></Search>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={props => (\n                  <Stories {...props} stories={xrFactions} search={search} />\n                )}\n              ></Route>\n              <Route exact path=\"/:id/add-action\" component={AddAction}></Route>\n              <Route exact path=\"/add-story\" component={AddStory}></Route>\n              <Route exact path=\"/add-demand\" component={AddDemand}></Route>\n              <Route\n                exact\n                path=\"/demands/edit/:id\"\n                component={EditDemand}\n              ></Route>\n              <Route\n                exact\n                path=\"/demands/:id\"\n                component={DemandDetails}\n              ></Route>\n              <Route\n                exact\n                path=\"/suggested\"\n                render={props => (\n                  <Demands\n                    {...props}\n                    demands={suggestedCards}\n                    search={search}\n                    header=\"DEMANDS\"\n                    subheader=\"Sign the ones you support below and join actions to push them through ASAP.\"\n                    backgroundColor=\"tweak-background-color\"\n                    eventKey=\"1\"\n                    isSuggested={true}\n                  />\n                )}\n              ></Route>\n              {/* <Route exact path=\"/suggested/:id\" component={SuggestedDetail}></Route> */}\n            </Switch>\n          </>\n        ) : (\n          <div className=\"loading-section\">\n            {\" \"}\n            <div className=\"spinner\">\n              <FontAwesomeIcon icon={faAmericanSignLanguageInterpreting} />\n            </div>\n          </div>\n        )}\n      </main>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./sass/main.scss\";\nimport { Link } from \"react-router-dom\";\nimport FooterNav from \"./components/FooterNav\";\nimport Routes from \"./components/Routes\";\n\nconst App = () => (\n  <>\n    <div className=\"app\">\n      {/* Header, shows regardless of which page we are on. Links back to '/' (Factions) */}\n      <header>\n        <Link to=\"/\">\n          <img src={\"/xr-logo.png\"} className=\"logo\" alt=\"logo\" />\n        </Link>\n      </header>\n      <div className=\"app-container\">\n        <Routes />\n      </div>\n    </div>\n    <FooterNav />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://create-react-app.dev/docs/making-a-progressive-web-app/\nserviceWorker.register();\n"],"sourceRoot":""}