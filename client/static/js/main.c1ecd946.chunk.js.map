{"version":3,"sources":["components/FooterNav.js","components/Story.js","components/Stories.js","components/Voting.js","components/DemandItem.js","components/Demands.js","components/AddAction.js","components/AddStory.js","components/AddDemand.js","components/EditDemand.js","components/DemandComponents/References.js","components/DemandComponents/Edit.js","components/DemandComponents/Edits.js","components/DemandDetails.js","components/DemandComponents/Description.js","components/DemandComponents/Header.js","components/Search.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["FooterNav","props","state","actionsActive","homeActive","demandsActive","handleActionsClick","bind","handleHomeClick","handleDemandsClick","className","this","onClick","to","icon","faHandPointer","faSkullCrossbones","faFistRaised","faPlus","setState","Component","Story","isLoading","img","getImage","city","axios","get","params","query","page","per_page","headers","Authorization","then","response","data","results","urls","small","console","log","passToParent","src","alt","country","Stories","currentTwitterHandle","stories","search","getStories","catch","err","handle","map","story","key","id","passTwitterHandleFromChild","twitterHandle","sourceType","url","options","height","Voting","score","votes","increment","decrement","showAsRebel","faMale","isSent","faPenFancy","faCaretUp","faCaretDown","React","DemandItem","card","isSuggested","isBeingDefined","cardBackgroundType","Card","status","isRebel","title","summary","as","Header","faBook","faCheck","faBookOpen","faWrench","faHashtag","actions","length","Demands","header","subheader","backgroundColor","demands","Body","Accordion","AddAction","newAction","request","method","alert","e","demandId","date","refs","value","time","name","telegram","addAction","preventDefault","href","onSubmit","type","ref","placeholder","htmlFor","AddStory","newStory","history","push","twitter","addStory","AddDemand","newDemand","background","indicators","representative","representativeEmail","addDemand","style","width","EditDemand","handleInputChange","getDemandDetails","match","editDemand","target","onChange","References","Edit","open","originalText","edit","togglePanel","acceptedVoteNumber","Edits","edits","section","faPen","DemandDetails","demand","currentDemandId","showDemandSection","showReferencesSection","showRebelSection","handleDemandClick","handleReferencesClick","handleRebelClick","getData","all","spread","actionsArray","criteria","demandActions","filter","item","delete","onDelete","defaultActiveKey","Toggle","eventKey","Collapse","tag","size","screenName","buttonHashtag","hashtag","action","joined","Search","updateSearch","Routes","event","substr","filteredCards","indexOf","xrFactions","sentCards","suggestedCards","exact","path","component","render","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1ecd946.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFistRaised,\n  faPlus,\n  faSkullCrossbones,\n  faHandPointer\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class FooterNav extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      actionsActive: \"\",\n      homeActive: \"currently-active\",\n      demandsActive: \"\"\n    };\n\n    this.handleActionsClick = this.handleActionsClick.bind(this);\n    this.handleHomeClick = this.handleHomeClick.bind(this);\n    this.handleDemandsClick = this.handleDemandsClick.bind(this);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"footer-nav\">\n          <div\n            className={`icon-nav ${this.state.demandsActive}`}\n            onClick={this.handleDemandsClick}\n          >\n            <Link to=\"/suggested\">\n              <FontAwesomeIcon icon={faHandPointer} />\n            </Link>\n            <h6>Suggestions</h6>\n          </div>\n          <div\n            className={`icon-nav ${this.state.homeActive}`}\n            onClick={this.handleHomeClick}\n          >\n            <Link to=\"/\">\n              <FontAwesomeIcon icon={faSkullCrossbones} />\n            </Link>\n            <h6>What's up</h6>\n          </div>\n          <div\n            className={`icon-nav ${this.state.actionsActive}`}\n            onClick={this.handleActionsClick}\n          >\n            <Link to=\"/demands\">\n              <FontAwesomeIcon icon={faFistRaised} />\n            </Link>\n            <h6>Demands</h6>\n          </div>\n        </div>\n        <div className=\"add-nav\">\n          <Link to=\"/add-demand\">\n            <FontAwesomeIcon icon={faPlus} />\n          </Link>\n        </div>\n      </>\n    );\n  }\n\n  handleActionsClick() {\n    this.setState({\n      actionsActive: \"currently-active\",\n      homeActive: \"\",\n      demandsActive: \"\"\n    });\n  }\n\n  handleHomeClick() {\n    this.setState({\n      actionsActive: \"\",\n      homeActive: \"currently-active\",\n      demandsActive: \"\"\n    });\n  }\n\n  handleDemandsClick() {\n    this.setState({\n      actionsActive: \"\",\n      homeActive: \"\",\n      demandsActive: \"currently-active\"\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Story extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      img: \"\"\n    };\n\n    this.getImage = this.getImage.bind(this);\n  }\n\n  componentDidMount() {\n    this.getImage(this.props.city);\n  }\n\n  getImage(city) {\n    axios\n      .get(\"https://api.unsplash.com/search/photos\", {\n        params: { query: city },\n        page: 1,\n        per_page: 1,\n        headers: {\n          Authorization:\n            \"Client-ID cb32c91579c47c9f70fd331095157ba5134b18d039ce6980b4403f3d8a9b6000\"\n        }\n      })\n      .then(response => {\n        this.setState({\n          img: response.data.results[0].urls.small,\n          isLoading: false\n        });\n      });\n  }\n\n  render() {\n    console.log(\"this.props.passToParent from child:\", this.props.passToParent);\n\n    return (\n      <div className=\"story\" onClick={this.props.passToParent}>\n        <div className=\"mask\">\n          <img\n            src={\n              this.state.img\n                ? this.state.img\n                : \"https://images.unsplash.com/photo-1571238052771-c6e35627d337?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=190&q=80\"\n            }\n            alt=\"img\"\n          ></img>\n        </div>\n        <h5>{this.props.city}</h5>\n        <h5>{this.props.country}</h5>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Story from \"./Story\";\nimport { Link } from \"react-router-dom\";\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class Stories extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      currentTwitterHandle: \"https://twitter.com/XR_Belgium\",\n      stories: [],\n      search: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getStories();\n  }\n\n  getStories() {\n    axios\n      .get(\"http://localhost:3001/api/stories\")\n      .then(response => {\n        this.setState({\n          stories: response.data,\n          isLoading: false\n        });\n      })\n      .catch(err => console.log(\"error in Stories.js:getStories()\", err));\n  }\n\n  passTwitterHandleFromChild(handle) {\n    console.log(\"handle passed to passTwitterHandleFromChild:\", handle);\n    this.setState({ currentTwitterHandle: handle });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"story-section stories-background-color\">\n          <h2>RECENT ACTIONS</h2>\n          <div className=\"stories\">\n            <Link to=\"/add-story\">\n              <div className=\"add-button\">\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n            </Link>\n            {this.state.stories.map(story => {\n              return (\n                <Story\n                  key={story.id}\n                  passToParent={this.passTwitterHandleFromChild.bind(\n                    this,\n                    story.twitterHandle\n                  )}\n                  city={story.city}\n                  country={story.country}\n                ></Story>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"centerContent\">\n          <div className=\"selfCenter standardWidth\">\n            <TwitterTimelineEmbed\n              sourceType=\"url\"\n              url={`https://twitter.com/${this.state.currentTwitterHandle}`}\n              options={{ height: 600 }}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMale,\n  faPenFancy,\n  faCaretUp,\n  faCaretDown\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport class Voting extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      score: this.props.votes\n    };\n\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"voting-section\">\n        {this.props.showAsRebel ? (\n          <div className=\"icon-section\">\n            <button className=\"fa-icons\" onClick={this.increment}>\n              <h6>{this.state.score}</h6>\n              <FontAwesomeIcon className=\"btn-icon\" icon={faMale} />\n            </button>\n          </div>\n        ) : this.props.isSent ? (\n          <div className=\"icon-section\">\n            <h6>{this.state.score}</h6>\n            <FontAwesomeIcon\n              className=\"btn-icon\"\n              icon={faPenFancy}\n              onClick={this.increment}\n            />\n          </div>\n        ) : (\n          <div className=\"icon-section\">\n            <FontAwesomeIcon\n              className=\"btn-icon\"\n              icon={faCaretUp}\n              onClick={this.increment}\n            />\n            <h6>{this.state.score}</h6>\n            <FontAwesomeIcon\n              className=\"btn-icon\"\n              icon={faCaretDown}\n              onClick={this.decrement}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  increment() {\n    this.setState({\n      score: this.state.score + 1\n    });\n  }\n\n  decrement() {\n    this.setState({\n      score: this.state.score - 1\n    });\n  }\n}\nexport default Voting;\n","import React, { Component } from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\n\nimport Voting from \"./Voting\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faBookOpen,\n  faHashtag,\n  faFistRaised,\n  faCheck,\n  faWrench\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class DemandItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      card: props.card\n    };\n  }\n\n  render() {\n    const { card } = this.state;\n\n    let isSuggested = card.isBeingDefined;\n    let cardBackgroundType = isSuggested ? \"suggested\" : \"sent\";\n\n    return (\n      <div className={`card-wrapper ${cardBackgroundType}`} key={card.id}>\n        {/* Section with votes, appears outside toggle so can use the voting functionality */}\n        <Voting votes={card.votes} isSent={card.isSent} />\n\n        <Card>\n          <Link to={`/demands/${card.id}`}>\n            <div className=\"demand-header\">\n              {/* Status */}\n              {!isSuggested && card.status ? (\n                <p className={`pill ${card.isRebel ? \"red\" : \"darkblue\"}`}>\n                  {card.status}\n                </p>\n              ) : null}\n              {/* Country */}\n              <h6>\n                {card.city}, <span className=\"bold\">{card.country}</span>\n              </h6>\n\n              {/* Main card header */}\n              <h5>{card.title}</h5>\n              <h6>{card.summary}</h6>\n            </div>\n\n            <div className=\"separator\"></div>\n\n            {/* TRIGGERS */}\n            <div className=\"card-stats-section flex-spread\">\n              {/* Show full demand */}\n              <div as={Card.Header} className=\"icon-section\">\n                {card.isSent ? (\n                  <>\n                    <FontAwesomeIcon icon={faBook} />\n                    <FontAwesomeIcon\n                      icon={faCheck}\n                      className=\"green-color icon-margin-left\"\n                    />\n                  </>\n                ) : (\n                  <>\n                    <FontAwesomeIcon icon={faBookOpen} />\n                    <FontAwesomeIcon\n                      icon={faWrench}\n                      className=\"icon-margin-left\"\n                    />\n                  </>\n                )}\n              </div>\n              <div as={Card.Header} className=\"icon-section\">\n                <FontAwesomeIcon icon={faHashtag} />\n              </div>\n              <div as={Card.Header} className=\"icon-section\">\n                <h6>{this.state.actions ? this.state.actions.length : 0}</h6>\n                <FontAwesomeIcon icon={faFistRaised} />\n              </div>\n            </div>\n          </Link>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\n\nimport DemandItem from \"./DemandItem\";\n\nexport default class Demands extends Component {\n  render() {\n    const {\n      header,\n      subheader,\n      backgroundColor,\n      demands,\n      isSent,\n      isSuggested\n    } = this.props;\n\n    return (\n      <div className=\"demand-section\">\n        <Card>\n          <div className={`demand-section-header ${backgroundColor}`}>\n            <h2>\n              {header} ({demands.length || 0})\n            </h2>\n            <div className=\"tight-header no-margin\">\n              <p>{subheader}</p>\n            </div>\n          </div>\n          {/* Collapsed accordion section with all demands in the set */}\n          <Card.Body>\n            <Accordion>\n              {!demands.length ? (\n                <div className=\"tight-header\">\n                  <p className=\"text-center\">(Nothing here yet.)</p>\n                </div>\n              ) : null}\n              {demands.map(card => {\n                return (\n                  <DemandItem\n                    key={card.id}\n                    card={card}\n                    isSent={isSent}\n                    isSuggested={isSuggested}\n                  ></DemandItem>\n                );\n              })}\n            </Accordion>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class AddAction extends Component {\n  addAction(newAction) {\n    axios\n      .request({\n        method: \"post\",\n        url: \"http://localhost:3001/api/actions\",\n        data: newAction\n      })\n      .then(response => {\n        alert(\"Saved, refresh to see (working on this)\");\n        console.log(response);\n      })\n      .catch(err => console.log(\"Error from AddAction.js:addAction\", err));\n  }\n\n  onSubmit(e) {\n    const newAction = {\n      demandId: this.props.demandId,\n      date: this.refs.date.value,\n      time: this.refs.time.value,\n      name: this.refs.name.value,\n      telegram: this.refs.telegram.value\n    };\n    console.log(\"newAction\", newAction);\n\n    this.addAction(newAction);\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n        <h6>\n          Create new action. Handle all communication for this action via\n          telegram, so start by{\" \"}\n          <a href=\"https://blog.en.uptodown.com/how-to-create-groups-and-channels-telegram/\">\n            creating a group on telegram\n          </a>{\" \"}\n          and adding the name of it below.\n        </h6>\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <div className=\"flex-spread\">\n            <div className=\"form-group\">\n              <input\n                className=\"form-input\"\n                type=\"text\"\n                name=\"date\"\n                ref=\"date\"\n                placeholder=\"Date of action\"\n              />\n              <label htmlFor=\"date\"></label>\n            </div>\n            <div className=\"form-group\">\n              <input type=\"text\" name=\"time\" ref=\"time\" placeholder=\"time\" />\n              <label htmlFor=\"time\"></label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              ref=\"name\"\n              placeholder=\"Name of action\"\n            />\n            <label htmlFor=\"name\"></label>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              name=\"telegram\"\n              ref=\"telegram\"\n              placeholder=\"Telegram group name\"\n            />\n            <label htmlFor=\"telegram\"></label>\n          </div>\n          <input\n            className=\"form-input tweak-background-color btn float-right\"\n            type=\"submit\"\n            value=\"Add new action\"\n          />\n        </form>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class AddStory extends Component {\n  addStory(newStory) {\n    axios\n      .request({\n        method: \"post\",\n        url: \"http://localhost:3001/api/stories\",\n        data: newStory\n      })\n      .then(response => {\n        this.props.history.push(\"/\");\n        console.log(response);\n      })\n      .catch(err => console.log(\"Error from StoriesAdd.js:addStory\", err));\n  }\n\n  onSubmit(e) {\n    const newStory = {\n      city: this.refs.city.value,\n      country: this.refs.country.value,\n      twitterHandle: this.refs.twitter.value\n    };\n    this.addStory(newStory);\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n        <Link className=\"btn grey\" to=\"/\">\n          Back\n        </Link>\n        <Card className=\"add-story\">\n          <h6>Add a new XR faction.</h6>\n\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <div className=\"flex-spread\">\n              <div className=\"form-group\">\n                <input\n                  className=\"form-input\"\n                  type=\"text\"\n                  name=\"city\"\n                  ref=\"city\"\n                  placeholder=\"City\"\n                />\n                <label htmlFor=\"city\"></label>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"country\"\n                  ref=\"country\"\n                  placeholder=\"Country\"\n                />\n                <label htmlFor=\"country\"></label>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"twitter\"\n                ref=\"twitter\"\n                placeholder=\"Twitter Handle\"\n              />\n              <label htmlFor=\"twitter\"></label>\n            </div>\n            <input\n              className=\"form-input tweak-background-color btn float-right\"\n              type=\"submit\"\n              value=\"Add new XR faction\"\n            />\n          </form>\n          <br></br>\n        </Card>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class AddDemand extends Component {\n  addDemand(newDemand) {\n    axios\n      .request({\n        method: \"post\",\n        url: \"http://localhost:3001/api/demands\",\n        data: newDemand\n      })\n      .then(response => {\n        this.props.history.push(\"/\");\n        console.log(response);\n      })\n      .catch(err => console.log(\"Error from AddDemand.js:addDemand\", err));\n  }\n\n  onSubmit(e) {\n    const newDemand = {\n      isBeingDefined: true,\n      title: this.refs.title.value,\n      city: this.refs.city.value,\n      country: this.refs.country.value,\n      summary: this.refs.summary.value,\n      background: this.refs.background.value,\n      indicators: this.refs.indicators.value,\n      representative: this.refs.representative.value,\n      representativeEmail: this.refs.representativeEmail.value\n    };\n    this.addDemand(newDemand);\n    e.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n        <Link className=\"btn grey\" to=\"/\">\n          Back\n        </Link>\n        <Card className=\"add-demand\">\n          <h6>\n            Start a new demand. It does not have to be perfect, we can make it\n            great together afterwards.\n          </h6>\n\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-input\"\n                type=\"text\"\n                name=\"title\"\n                ref=\"title\"\n                placeholder=\"Title\"\n              />\n              <label htmlFor=\"title\"></label>\n            </div>\n            <div className=\"flex-spread\">\n              <div className=\"form-group\">\n                <input\n                  className=\"form-input\"\n                  type=\"text\"\n                  name=\"city\"\n                  ref=\"city\"\n                  placeholder=\"City\"\n                />\n                <label htmlFor=\"city\"></label>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"country\"\n                  ref=\"country\"\n                  placeholder=\"Country\"\n                />\n                <label htmlFor=\"country\"></label>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"summary\"\n                ref=\"summary\"\n                placeholder=\"Summary\"\n              />\n              <label htmlFor=\"summary\"></label>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"background\"\n                ref=\"background\"\n                placeholder=\"Background\"\n              />\n              <label htmlFor=\"background\"></label>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"indicators\"\n                ref=\"indicators\"\n                placeholder=\"Indicators\"\n              />\n              <label htmlFor=\"indicators\"></label>\n            </div>\n            <br></br>\n            <h6>\n              <span className=\"bold\">Representative</span> to send the demand to\n              once it has been defined and accepted by the group. This should be\n              the person who has the authority to raise this issue in\n              parliament. If you don't know who, leave it blank for now.\n            </h6>\n            <div className=\"flex-spread\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"representative\"\n                  ref=\"representative\"\n                  placeholder=\"Rep name\"\n                />\n                <label htmlFor=\"representative\"></label>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"representativeEmail\"\n                  ref=\"representativeEmail\"\n                  placeholder=\"Email\"\n                />\n                <label htmlFor=\"representativeEmail\"></label>\n              </div>\n            </div>\n\n            <br></br>\n            <h6>One time linking setup:</h6>\n            <div className=\"list-group-item\">\n              <input\n                type=\"checkbox\"\n                ref=\"createdTwitter\"\n                style={{\n                  height: 16,\n                  width: 16\n                }}\n              />\n              <span>\n                Create a new account on Twitter called{\" \"}\n                <span className=\"bold\">@xr110references</span>, after this\n                initial setup you will not need to touch it again.\n              </span>\n            </div>\n            <div className=\"list-group-item\">\n              <input\n                type=\"checkbox\"\n                ref=\"createdIFTTT\"\n                style={{\n                  height: 16,\n                  width: 16\n                }}\n              />\n              <span>\n                Create an account at{\" \"}\n                <a className=\"bold\" href=\"https://iftt.com\">\n                  IFTTT\n                </a>\n              </span>\n            </div>\n            <div className=\"list-group-item\">\n              <input\n                type=\"checkbox\"\n                ref=\"createdScript\"\n                style={{\n                  height: 16,\n                  width: 16\n                }}\n              />\n              <span>\n                Setup autotweeting all Tweets with #xr110 through this{\" \"}\n                <a\n                  className=\"bold\"\n                  href=\"https://ifttt.com/applets/SMvaxczG-if-hashtag-then-retweet-it\"\n                >\n                  IFTTT recipe.\n                </a>\n              </span>\n            </div>\n            <p>\n              Hurray! Now all Tweets anyone does with #xr110 gets automatically\n              pulled into the # section of your new petition. You won't have to\n              do anything.\n            </p>\n            <input\n              className=\"form-input tweak-background-color btn float-right\"\n              type=\"submit\"\n              value=\"Add new demand\"\n            />\n          </form>\n          <br></br>\n          <br></br>\n        </Card>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default class EditDemand extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isBeingDefined: true, //this should be dealt with differently, should only be true if the demand does not meet certain criteria (TBD)\n      title: \"\",\n      city: \"\",\n      country: \"\",\n      summary: \"\",\n      background: \"\",\n      indicators: \"\",\n      representative: \"\",\n      representativeEmail: \"\"\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.getDemandDetails();\n  }\n\n  getDemandDetails() {\n    let demandId = this.props.match.params.id;\n    axios\n      .get(`http://localhost:3001/api/demands/${demandId}`)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          city: response.data.city,\n          country: response.data.country,\n          summary: response.data.summary,\n          background: response.data.background,\n          indicators: response.data.indicators,\n          representative: response.data.representative,\n          representativeEmail: response.data.representativeEmail\n        });\n      })\n      .catch(err =>\n        console.log(\"Error from EditDemand.js:getDemandDetails\", err)\n      );\n  }\n\n  editDemand(newDemand) {\n    axios\n      .request({\n        method: \"put\",\n        url: `http://localhost:3001/api/demands/${this.state.id}`,\n        data: newDemand\n      })\n      .then(response => {\n        alert(\"Saved\");\n        this.props.history.push(\"/\");\n        console.log(response);\n      })\n      .catch(err => console.log(\"Error from EditDemand.js:editDemand\", err));\n  }\n\n  onSubmit(e) {\n    const newDemand = {\n      isBeingDefined: true,\n      title: this.refs.title.value,\n      city: this.refs.city.value,\n      country: this.refs.country.value,\n      summary: this.refs.summary.value,\n      background: this.refs.background.value,\n      indicators: this.refs.indicators.value,\n      representative: this.refs.representative.value,\n      representativeEmail: this.refs.representativeEmail.value\n    };\n    this.editDemand(newDemand);\n    e.preventDefault();\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Link className=\"btn grey\" to=\"/\">\n          Back\n        </Link>\n        <Card className=\"add-demand\">\n          <form onSubmit={this.onSubmit.bind(this)}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-input\"\n                type=\"text\"\n                name=\"title\"\n                ref=\"title\"\n                placeholder=\"Title\"\n                value={this.state.title}\n                onChange={this.handleInputChange}\n              />\n              <label htmlFor=\"title\"></label>\n            </div>\n            <div className=\"flex-spread\">\n              <div className=\"form-group\">\n                <input\n                  className=\"form-input\"\n                  type=\"text\"\n                  name=\"city\"\n                  ref=\"city\"\n                  placeholder=\"City\"\n                  value={this.state.city}\n                  onChange={this.handleInputChange}\n                />\n                <label htmlFor=\"city\"></label>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"country\"\n                  ref=\"country\"\n                  placeholder=\"Country\"\n                  value={this.state.country}\n                  onChange={this.handleInputChange}\n                />\n                <label htmlFor=\"country\"></label>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"summary\"\n                ref=\"summary\"\n                placeholder=\"Summary\"\n                value={this.state.summary}\n                onChange={this.handleInputChange}\n              />\n              <label htmlFor=\"summary\"></label>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"background\"\n                ref=\"background\"\n                placeholder=\"Background\"\n                value={this.state.background}\n                onChange={this.handleInputChange}\n              />\n              <label htmlFor=\"background\"></label>\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                name=\"indicators\"\n                ref=\"indicators\"\n                placeholder=\"Indicators\"\n                value={this.state.indicators}\n                onChange={this.handleInputChange}\n              />\n              <label htmlFor=\"indicators\"></label>\n            </div>\n            <br></br>\n\n            <div className=\"flex-spread\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"representative\"\n                  ref=\"representative\"\n                  placeholder=\"Rep name\"\n                  value={this.state.representative}\n                  onChange={this.handleInputChange}\n                />\n                <label htmlFor=\"representative\"></label>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  name=\"representativeEmail\"\n                  ref=\"representativeEmail\"\n                  placeholder=\"Email\"\n                  value={this.state.representativeEmail}\n                  onChange={this.handleInputChange}\n                />\n                <label htmlFor=\"representativeEmail\"></label>\n              </div>\n            </div>\n\n            <input\n              className=\"form-input tweak-background-color btn float-right\"\n              type=\"submit\"\n              value=\"Save\"\n            />\n          </form>\n          <br></br>\n          <br></br>\n        </Card>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\n\nexport default class References extends Component {\n  // Then we add our constructor which receives our props\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div className=\"centerContent\">\n        <div className=\"selfCenter standardWidth\">\n          <TwitterTimelineEmbed\n            sourceType=\"url\"\n            url={`https://twitter.com/xr102references`}\n            options={{ height: 400 }}\n          />\n          {/* Once Twitter '@${this.props.hashtag}references' exists and IFTT has been set up for automatically pulling in all #${this.props.hashtag} tweets: */}\n          {/* <TwitterTimelineEmbed\n            sourceType=\"url\"\n            url={`https://twitter.com/${this.props.hashtag}references`}\n            options={{ height: 400 }} */}\n          {/* /> */}\n        </div>\n      </div>\n      //Alternative approach, pulls in tweets with petitionId hashtag without IFTTT workaround but does not work on iOS:\n      // <iframe\n      //   title=\"twubs\"\n      //   src={`http://twubs.com/embed/${this.props.hashtag}/?messagesPerPage=5&headerBgColor=%23000000&headerTextColor=%23ffffff`}\n      //   width=\"350\"\n      //   height=\"350\"\n      //   frameBorder=\"0\"\n      // >\n      //   <a href={`http://twubs.com/${this.props.hashtag}`}>\n      //     #{this.props.hashtag}\n      //   </a>\n      // </iframe>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Voting from \"../Voting\";\n\nexport default class Edit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: true,\n      originalText: this.props.originalText,\n      edit: this.props.edit\n    };\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  togglePanel(e) {\n    this.setState({ open: !this.state.open });\n  }\n\n  componentDidUpdate() {\n    // this.props.onToggle(this.props.index);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"separator\"></div>\n        <div\n          key={this.state.edit.id}\n          className=\"collapsible-in-card main-border-color card-padding\"\n        >\n          <Voting votes={this.state.edit.votes} acceptedVoteNumber={100} />\n          <div\n            onClick={e => this.togglePanel(e)}\n            className=\"collapsible-trigger\"\n          >\n            <div className=\"edit flex-spread\">\n              <div className=\"tight-header\">\n                <p className=\"grey-color\">\n                  {this.state.edit.date ? this.state.edit.date : \"No date\"}\n                </p>\n                <p className=\"bold margin-bottom-10px\">\n                  \"{this.state.edit.title}\"\n                </p>\n                <p>{this.state.edit.name ? this.state.edit.name : \"No name\"}</p>\n              </div>\n            </div>\n          </div>\n\n          {this.state.open ? (\n            <div className=\"collapsible-content\">\n              <div className=\"separator\"></div>\n              <div className=\"compare-commits\">\n                <div className=\"edit-section\">\n                  <p className=\"bold\">Original:</p>\n                  <p>{this.state.originalText}</p>\n                </div>\n                <div className=\"edit-section\">\n                  <p className=\"bold\">Edit:</p>\n                  <p className=\"changes\">{this.state.edit.edit}</p>\n                </div>\n              </div>{\" \"}\n            </div>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Edit from \"./Edit\";\n\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class Edits extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      originalText: this.props.originalText,\n      edits: this.props.edits,\n      section: this.props.section\n    };\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  togglePanel(e) {\n    this.setState({ open: !this.state.open });\n  }\n\n  render() {\n    const originalText = this.state.originalText;\n    return (\n      <>\n        <div className=\"collapsible-in-card\">\n          <div\n            onClick={e => this.togglePanel(e)}\n            className=\"collapsible-trigger\"\n          >\n            <div className=\"edit flex-spread\">\n              <h6> {this.state.section}</h6>\n              <div className=\"icon-section\">\n                {this.state.edits.length}\n                <FontAwesomeIcon className=\"btn-icon\" icon={faPen} />\n              </div>\n            </div>\n          </div>\n          {this.state.open ? (\n            <div className=\"collapsible-content full-width\">\n              {this.state.edits.map(edit => {\n                return (\n                  <Edit\n                    key={edit.id}\n                    edit={edit}\n                    originalText={originalText}\n                  ></Edit>\n                );\n              })}\n            </div>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\n\nimport AddAction from \"./AddAction\";\nimport References from \"./DemandComponents/References\";\nimport Description from \"./DemandComponents/Description\";\nimport Header from \"./DemandComponents/Header\";\n\nimport Voting from \"./Voting\";\n\nimport { TwitterHashtagButton } from \"react-twitter-embed\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlus,\n  faBook,\n  faBookOpen,\n  faHashtag,\n  faFistRaised,\n  faCheck,\n  faWrench\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class DemandDetails extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      demand: \"\",\n      isLoading: true,\n      actions: [],\n      currentDemandId: props.match.params.id,\n      isSuggested: props.isSuggested,\n      isSent: props.isSent,\n      showDemandSection: false,\n      showReferencesSection: false,\n      showRebelSection: false\n    };\n\n    this.handleDemandClick = this.handleDemandClick.bind(this);\n    this.handleReferencesClick = this.handleReferencesClick.bind(this);\n    this.handleRebelClick = this.handleRebelClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    let demandId = this.props.match.params.id;\n    axios\n      .all([\n        axios.get(`http://localhost:3001/api/demands/${demandId}`),\n        axios.get(\"http://localhost:3001/api/actions\")\n      ])\n      .then(\n        axios.spread((demand, actions) => {\n          const actionsArray = actions.data;\n          const criteria = this.state.currentDemandId;\n          const demandActions = actionsArray.filter(\n            item => item.demandId === criteria\n          );\n          this.setState({\n            demand: demand.data,\n            actions: demandActions,\n            isLoading: false\n          });\n        })\n      )\n      .catch(err => console.log(\"error in DemandDetails.js:getData()\", err));\n  }\n\n  onDelete() {\n    let demandId = this.state.demand.id;\n    axios\n      .delete(`http://localhost:3001/api/demands/${demandId}`)\n      .then(response => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(\"Error from DemandDetails.js:onDelete\", err));\n  }\n\n  render() {\n    const { isSuggested, demand } = this.state;\n\n    let cardBackgroundType = demand.isBeingDefined ? \"suggested\" : \"sent\";\n\n    return (\n      <>\n        {/* Back, edit, delete */}\n        <Link className=\"btn grey\" to={\"/\"}>\n          Back\n        </Link>\n        <Link className=\"btn\" to={`/demands/edit/${demand.id}`}>\n          Edit\n        </Link>\n        <button onClick={this.onDelete.bind(this)} className=\"btn red light\">\n          Delete\n        </button>\n\n        {/* Details for item */}\n        <div className={`card-wrapper ${cardBackgroundType}`} key={demand.id}>\n          {/* Section with votes, appears outside toggle so can use the voting functionality */}\n          <Voting votes={demand.votes} isSent={demand.isSent} />\n\n          <Accordion defaultActiveKey=\"0\">\n            <Card>\n              <div className=\"demand-header\">\n                {/* Status */}\n                {!isSuggested && demand.status ? (\n                  <p className={`pill ${demand.isRebel ? \"red\" : \"darkblue\"}`}>\n                    {demand.status}\n                  </p>\n                ) : null}\n                {/* Country */}\n                <h6>\n                  {demand.city}, <span className=\"bold\">{demand.country}</span>\n                </h6>\n\n                {/* Main card header */}\n                <h5>{demand.title}</h5>\n              </div>\n              <div className=\"separator\"></div>\n\n              {/* TRIGGERS */}\n              <div className=\"card-stats-section flex-spread\">\n                {/* Show full demand */}\n                <Accordion.Toggle\n                  as={Card.Header}\n                  eventKey=\"0\"\n                  className=\"icon-section\"\n                  onClick={this.handleDemandClick}\n                >\n                  {demand.isSent ? (\n                    <>\n                      <FontAwesomeIcon icon={faBook} />\n                      <FontAwesomeIcon\n                        icon={faCheck}\n                        className=\"green-color icon-margin-left\"\n                      />\n                    </>\n                  ) : (\n                    <>\n                      <FontAwesomeIcon icon={faBookOpen} />\n\n                      <FontAwesomeIcon\n                        icon={faWrench}\n                        className=\"icon-margin-left\"\n                      />\n                    </>\n                  )}\n                </Accordion.Toggle>\n\n                {/* Show references */}\n                <Accordion.Toggle\n                  as={Card.Header}\n                  eventKey=\"1\"\n                  className=\"icon-section\"\n                  onClick={this.handleReferencesClick}\n                >\n                  <FontAwesomeIcon icon={faHashtag} />\n                </Accordion.Toggle>\n                {/* Show rebel actions */}\n                <Accordion.Toggle\n                  as={Card.Header}\n                  eventKey=\"2\"\n                  className=\"icon-section\"\n                  onClick={this.handleRebelClick}\n                >\n                  <h6>{this.state.actions ? this.state.actions.length : 0}</h6>\n                  <FontAwesomeIcon icon={faFistRaised} />\n                </Accordion.Toggle>\n              </div>\n\n              {/* CONTENT */}\n\n              {/* Demand section */}\n              {this.state.showDemandSection ? (\n                <>\n                  <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                      <div>\n                        {/* Summary section*/}\n\n                        {isSuggested ? (\n                          <>\n                            <div className=\"tight-header\">\n                              <h6>Being defined. Edit and add below.</h6>\n                            </div>\n                            <div className=\"separator\"></div>\n                          </>\n                        ) : null}\n                      </div>\n                      <p>Disabled for a sec while hooking up real data.</p>\n                      {/* <Header\n                    postedBy={demand.postedBy}\n                    representative={demand.representative}\n                    timeSent={demand.timeSent}\n                  />\n                  <div className=\"separator\"></div>\n                  <Description card={demand} /> */}\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </>\n              ) : null}\n\n              {/* References section */}\n              {this.state.showReferencesSection && demand.id ? (\n                <>\n                  <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>\n                      <h6>\n                        To add references that support this demand:\n                        <TwitterHashtagButton\n                          tag={demand.id}\n                          options={{\n                            size: \"large\",\n                            screenName: null,\n                            buttonHashtag: null\n                          }}\n                        />\n                        Your tweet will automatically be pulled into the feed\n                        below.\n                      </h6>\n                      <References hashtag={demand.id} />\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </>\n              ) : null}\n\n              {/* Action section */}\n              {this.state.showRebelSection ? (\n                <>\n                  <Accordion.Collapse eventKey=\"2\">\n                    <Card.Body>\n                      {this.state.actions ? (\n                        <>\n                          <h6>\n                            Join by clicking the join button on the right of the\n                            action, you'll get sent a telegram invitation with\n                            more info.\n                          </h6>\n                          {this.state.actions.map(action => {\n                            return (\n                              <div className=\"rebel-card\" key={action.id}>\n                                {/* Joined people */}\n                                <Voting\n                                  showAsRebel={true}\n                                  votes={action.joined ? action.joined : 0}\n                                ></Voting>\n                                <div className=\"rebel-content\">\n                                  <div>\n                                    <h6 className=\"bold\">\n                                      {action.date}, {action.time}\n                                    </h6>\n                                    <h6>{action.name}</h6>\n                                  </div>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </>\n                      ) : null}\n                      {!this.state.actions ? (\n                        <>\n                          <br></br>\n                          <h6>There are no actions yet, start one below</h6>\n                        </>\n                      ) : null}\n                      <div className=\"separator\"></div>\n                      <br></br>\n                      {/* Add new action */}\n                      <AddAction demandId={demand.id} />\n                      {/* <Link to={`/${demand.id}/add-action`}>\n                        <div className=\"add-button\">\n                          <FontAwesomeIcon icon={faPlus} />\n                        </div>\n                      </Link> */}\n                      <br></br>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </>\n              ) : null}\n            </Card>\n          </Accordion>\n        </div>\n      </>\n    );\n  }\n\n  handleDemandClick() {\n    this.setState({\n      showDemandSection: true,\n      showReferencesSection: false,\n      showRebelSection: false\n    });\n  }\n\n  handleReferencesClick() {\n    this.setState({\n      showDemandSection: false,\n      showReferencesSection: true,\n      showRebelSection: false\n    });\n  }\n\n  handleRebelClick() {\n    this.setState({\n      showDemandSection: false,\n      showReferencesSection: false,\n      showRebelSection: true\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport Edits from \"./Edits\";\n\nexport default class Description extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.card.isSent ? (\n          <>\n            <br></br>\n            <h6>\n              This demand was defined by{\" \"}\n              <span className=\"bold\">{this.props.card.noOfContributors}</span>{\" \"}\n              of our members, who together made{\" \"}\n              <span className=\"bold\">{this.props.card.noOfEdits}</span> edits.\n              Add references supporting the demand in the hashtag section above,\n              and start actions to push it through parliament in the rebel\n              section.\n            </h6>\n            <div className=\"separator\"></div>\n          </>\n        ) : null}\n        {this.props.card.description.map(description => {\n          return (\n            <div key={description.id}>\n              <p className=\"bold no-margin\">{description.section}</p>\n              <p>{description.text ? description.text : \"TBD\"}</p>\n\n              {!this.props.card.isSent && description.edits.length ? (\n                <Edits\n                  edits={description.edits}\n                  originalText={description.text}\n                />\n              ) : null}\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"small-card-header\">\n          <div className=\"tight-header\">\n            <p className=\"grey\">By: {this.props.postedBy}</p>\n          </div>\n          <div>\n            <div className=\"tight-header\">\n              {this.props.timeSent ? (\n                <p>Sent to representative</p>\n              ) : (\n                <p>Responsible representative</p>\n              )}\n              <p className=\"bold\">\n                {this.props.representative\n                  ? this.props.representative\n                  : \"To be defined\"}\n              </p>\n              {this.props.timeSent ? <p>{this.props.timeSent}</p> : null}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Search extends Component {\n  render() {\n    return (\n      <input\n        className=\"search-filter\"\n        type=\"text\"\n        placeholder=\"Choose Country\"\n        value={this.props.search}\n        onChange={this.props.updateSearch}\n      ></input>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../sass/main.scss\";\nimport axios from \"axios\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Stories from \"./Stories\";\nimport Demands from \"./Demands\";\nimport AddAction from \"./AddAction\";\nimport AddStory from \"./AddStory\";\nimport AddDemand from \"./AddDemand\";\nimport EditDemand from \"./EditDemand\";\n\nimport DemandDetails from \"./DemandDetails\";\nimport Search from \"./Search\";\n\nexport default class Routes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      demands: [],\n      stories: [],\n      search: \"\"\n    };\n\n    this.updateSearch = this.updateSearch.bind(this);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    axios\n      .all([\n        axios.get(\"http://localhost:3001/api/stories\"),\n        axios.get(\"http://localhost:3001/api/demands\")\n      ])\n      .then(\n        axios.spread((stories, demands) => {\n          this.setState({\n            stories: stories.data,\n            demands: demands.data,\n            isLoading: false\n          });\n        })\n      )\n      .catch(err => console.log(\"error in Routes.js:getData()\", err));\n  }\n\n  updateSearch(event) {\n    this.setState({\n      search: event.target.value.substr(0, 20)\n    });\n  }\n\n  render() {\n    const { isLoading, demands, stories, search } = this.state;\n\n    //Return only demands which country name matches what's entered in the search field\n    let filteredCards = demands.filter(card => {\n      return card.country.indexOf(search) !== -1;\n    });\n\n    let xrFactions = stories.filter(story => {\n      return story.country.indexOf(search) !== -1;\n    });\n\n    // Define subsets of main card set\n    let sentCards = filteredCards.filter(card => card.isSent);\n    let suggestedCards = filteredCards.filter(card => card.isBeingDefined);\n\n    return (\n      <main>\n        {!isLoading ? (\n          <>\n            {/* Searchfield */}\n            <Search search={search} updateSearch={this.updateSearch}></Search>\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                component={Stories}\n                stories={xrFactions}\n                search={search}\n              ></Route>\n              <Route\n                exact\n                path=\"/demands\"\n                render={props => (\n                  <Demands\n                    {...props}\n                    demands={sentCards}\n                    search={search}\n                    header=\"DEMANDS\"\n                    subheader=\"Active demands that have been sent to parliament. Sign the ones you support below and join actions to push them through ASAP.\"\n                    backgroundColor=\"action-background-color\"\n                    eventKey=\"0\"\n                    isSent={true}\n                  />\n                )}\n              ></Route>\n              <Route exact path=\"/:id/add-action\" component={AddAction}></Route>\n              <Route exact path=\"/add-story\" component={AddStory}></Route>\n              <Route exact path=\"/add-demand\" component={AddDemand}></Route>\n              <Route\n                exact\n                path=\"/demands/edit/:id\"\n                component={EditDemand}\n              ></Route>\n              <Route\n                exact\n                path=\"/demands/:id\"\n                component={DemandDetails}\n              ></Route>\n              <Route\n                exact\n                path=\"/suggested\"\n                render={props => (\n                  <Demands\n                    {...props}\n                    demands={suggestedCards}\n                    search={search}\n                    header=\"SUGGESTIONS\"\n                    subheader=\"Suggested demands. Collaboratively flesh them out here.\"\n                    backgroundColor=\"tweak-background-color\"\n                    eventKey=\"1\"\n                    isSuggested={true}\n                  />\n                )}\n              ></Route>\n              {/* <Route exact path=\"/suggested/:id\" component={SuggestedDetail}></Route> */}\n            </Switch>\n          </>\n        ) : (\n          <h3>Loading...</h3>\n        )}\n      </main>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./sass/main.scss\";\nimport { Link } from \"react-router-dom\";\nimport FooterNav from \"./components/FooterNav\";\nimport Routes from \"./components/Routes\";\n\nconst App = () => (\n  // Header, shows regardless of which page we are on. Links back to '/' (Demands)\n  <>\n    <div className=\"app\">\n      <div className=\"app-container\">\n        <header>\n          <Link to=\"/\">\n            <img src={\"/xr-logo.png\"} className=\"logo\" alt=\"logo\" />\n          </Link>\n        </header>\n        <Routes />\n      </div>\n    </div>\n    <FooterNav />\n  </>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}